{"version":3,"file":"teact.js","mappings":"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","sources":["webpack://teact/webpack/universalModuleDefinition","webpack://teact/webpack/bootstrap","webpack://teact/webpack/runtime/define property getters","webpack://teact/webpack/runtime/hasOwnProperty shorthand","webpack://teact/webpack/runtime/make namespace object","webpack://teact/./src/config.ts","webpack://teact/./src/util/schedulers.ts","webpack://teact/./src/util/debugOverlay.ts","webpack://teact/./src/util/iteratees.ts","webpack://teact/./src/util/handleError.ts","webpack://teact/./src/util/safeExec.ts","webpack://teact/./src/util/signals.ts","webpack://teact/./src/lib/fasterdom/stricterdom.ts","webpack://teact/./src/lib/fasterdom/fasterdom.ts","webpack://teact/./src/teact/teact.ts","webpack://teact/./src/util/arePropsShallowEqual.ts","webpack://teact/./src/teact/dom-events.ts","webpack://teact/./src/teact/teact-dom.ts","webpack://teact/./src/teact/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"teact\"] = factory();\n\telse\n\t\troot[\"teact\"] = factory();\n})(this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const DEBUG = false;\nexport const DEBUG_MORE = false;\n","export function throttle(fn, ms, shouldRunFirst = true) {\n    let interval;\n    let isPending;\n    let args;\n    return (..._args) => {\n        isPending = true;\n        args = _args;\n        if (!interval) {\n            if (shouldRunFirst) {\n                isPending = false;\n                fn(...args);\n            }\n            // eslint-disable-next-line no-restricted-globals\n            interval = self.setInterval(() => {\n                if (!isPending) {\n                    // eslint-disable-next-line no-restricted-globals\n                    self.clearInterval(interval);\n                    interval = undefined;\n                    return;\n                }\n                isPending = false;\n                fn(...args);\n            }, ms);\n        }\n    };\n}\nexport function throttleWithTickEnd(fn) {\n    return throttleWith(onTickEnd, fn);\n}\nexport function throttleWith(schedulerFn, fn) {\n    let waiting = false;\n    let args;\n    return (..._args) => {\n        args = _args;\n        if (!waiting) {\n            waiting = true;\n            schedulerFn(() => {\n                waiting = false;\n                fn(...args);\n            });\n        }\n    };\n}\nexport function onIdle(cb, timeout) {\n    // eslint-disable-next-line no-restricted-globals\n    if (self.requestIdleCallback) {\n        // eslint-disable-next-line no-restricted-globals\n        self.requestIdleCallback(cb, { timeout });\n    }\n    else {\n        onTickEnd(cb);\n    }\n}\nconst FAST_RAF_TIMEOUT_FALLBACK_MS = 300;\nlet fastRafCallbacks;\nlet fastRafFallbackCallbacks;\nlet fastRafFallbackTimeout;\n// May result in an immediate execution if called from another RAF callback which was scheduled\n// (and therefore is executed) earlier than RAF callback scheduled by `fastRaf`\nexport function fastRaf(callback, withTimeoutFallback = false) {\n    if (!fastRafCallbacks) {\n        fastRafCallbacks = new Set([callback]);\n        requestAnimationFrame(() => {\n            const currentCallbacks = fastRafCallbacks;\n            fastRafCallbacks = undefined;\n            fastRafFallbackCallbacks = undefined;\n            if (fastRafFallbackTimeout) {\n                clearTimeout(fastRafFallbackTimeout);\n                fastRafFallbackTimeout = undefined;\n            }\n            currentCallbacks.forEach((cb) => cb());\n        });\n    }\n    else {\n        fastRafCallbacks.add(callback);\n    }\n    if (withTimeoutFallback) {\n        if (!fastRafFallbackCallbacks) {\n            fastRafFallbackCallbacks = new Set([callback]);\n        }\n        else {\n            fastRafFallbackCallbacks.add(callback);\n        }\n        if (!fastRafFallbackTimeout) {\n            fastRafFallbackTimeout = window.setTimeout(() => {\n                const currentTimeoutCallbacks = fastRafFallbackCallbacks;\n                if (fastRafCallbacks) {\n                    currentTimeoutCallbacks.forEach(fastRafCallbacks.delete, fastRafCallbacks);\n                }\n                fastRafFallbackCallbacks = undefined;\n                if (fastRafFallbackTimeout) {\n                    clearTimeout(fastRafFallbackTimeout);\n                    fastRafFallbackTimeout = undefined;\n                }\n                currentTimeoutCallbacks.forEach((cb) => cb());\n            }, FAST_RAF_TIMEOUT_FALLBACK_MS);\n        }\n    }\n}\nlet onTickEndCallbacks;\nexport function onTickEnd(callback) {\n    if (!onTickEndCallbacks) {\n        onTickEndCallbacks = [callback];\n        Promise.resolve().then(() => {\n            const currentCallbacks = onTickEndCallbacks;\n            onTickEndCallbacks = undefined;\n            currentCallbacks.forEach((cb) => cb());\n        });\n    }\n    else {\n        onTickEndCallbacks.push(callback);\n    }\n}\nlet beforeUnloadCallbacks;\nexport function onBeforeUnload(callback, isLast = false) {\n    if (!beforeUnloadCallbacks) {\n        beforeUnloadCallbacks = [];\n        // eslint-disable-next-line no-restricted-globals\n        self.addEventListener('beforeunload', () => {\n            beforeUnloadCallbacks.forEach((cb) => cb());\n        });\n    }\n    if (isLast) {\n        beforeUnloadCallbacks.push(callback);\n    }\n    else {\n        beforeUnloadCallbacks.unshift(callback);\n    }\n    return () => {\n        beforeUnloadCallbacks = beforeUnloadCallbacks.filter((cb) => cb !== callback);\n    };\n}\n","import { throttle } from './schedulers';\nconst KEYS_TO_IGNORE = new Set([\n    'TeactMemoWrapper renders',\n    'TeactNContainer renders',\n    'Button renders',\n]);\nconst MIN_RENDERS_TO_SHOW = 5;\nconst MIN_DURATION_TO_SHOW = 2;\nconst BG_GREEN = ' style=\"background: lightgreen\"';\nlet counters = {};\nconst renderCountersThrottled = throttle(renderCounters, 500, false);\nlet loggerEl;\nexport function debugToOverlay(text) {\n    if (!loggerEl) {\n        setupOverlay();\n    }\n    const date = new Date();\n    const dateFormatted = `${date.toLocaleTimeString()}.${date.getMilliseconds()}`;\n    const wasAtBottom = loggerEl.scrollTop + 10 >= loggerEl.scrollHeight - loggerEl.offsetHeight;\n    loggerEl.innerHTML += `${dateFormatted}: ${text}<br/>`;\n    if (wasAtBottom) {\n        loggerEl.scrollTop = loggerEl.scrollHeight;\n    }\n}\nexport function incrementOverlayCounter(key, value = 1) {\n    const now = Date.now();\n    if (!counters[key]) {\n        counters[key] = { value, lastUpdateAt: now };\n    }\n    else {\n        counters[key].value += value;\n        counters[key].lastUpdateAt = now;\n    }\n    renderCountersThrottled();\n}\nexport function renderCounters() {\n    if (!loggerEl) {\n        setupOverlay();\n    }\n    const halfSecondAgo = Date.now() - 500;\n    const [maxRenders, maxDuration] = Object.entries(counters).reduce((acc, [key, { value }]) => {\n        if (KEYS_TO_IGNORE.has(key)) {\n            return acc;\n        }\n        if (key.includes('renders') && value > acc[0]) {\n            acc[0] = value;\n        }\n        if (key.includes('duration') && value > acc[1]) {\n            acc[1] = value;\n        }\n        return acc;\n    }, [0, 0]);\n    loggerEl.innerHTML = Object\n        .entries(counters)\n        .filter(([key, { value }]) => ((!KEYS_TO_IGNORE.has(key)) && ((key.includes('renders') && value > MIN_RENDERS_TO_SHOW)\n        || (key.includes('duration') && value > MIN_DURATION_TO_SHOW))))\n        .sort((a, b) => (b[1].lastUpdateAt - a[1].lastUpdateAt))\n        .map(([key, { value, lastUpdateAt }]) => ([\n        `<div style=\"background: #ff0000${factorToHex(value / (key.includes('renders') ? maxRenders : maxDuration))}\">`,\n        `  <span${lastUpdateAt > halfSecondAgo ? BG_GREEN : ''}>${key}: ${Math.round(value)}</span>`,\n        '</div>',\n    ].join('\\n')))\n        .join('\\n');\n}\nfunction setupOverlay() {\n    loggerEl = document.createElement('div');\n    loggerEl.style.cssText = 'position: absolute; left: 0; bottom: 25px; z-index: 9998; width: 260px; height: 200px;'\n        + ' border: 1px solid #555; background: rgba(255, 255, 255, 0.9); overflow: auto; font-size: 10px;';\n    document.body.appendChild(loggerEl);\n    const clearEl = document.createElement('a');\n    clearEl.style.cssText = 'position: absolute; left: 222px; bottom: 198px; z-index: 9999; font-size: 20px; '\n        + 'cursor: pointer;';\n    clearEl.innerText = '🔄';\n    clearEl.addEventListener('click', () => {\n        counters = {};\n        renderCountersThrottled();\n    });\n    document.body.appendChild(clearEl);\n}\nfunction factorToHex(factor) {\n    return Math.round(255 * factor).toString(16).padStart(2, '0');\n}\n","export function orderBy(collection, orderRule, mode = 'asc') {\n    function compareValues(a, b, currentOrderRule, isAsc) {\n        const aValue = (typeof currentOrderRule === 'function' ? currentOrderRule(a) : a[currentOrderRule]) || 0;\n        const bValue = (typeof currentOrderRule === 'function' ? currentOrderRule(b) : b[currentOrderRule]) || 0;\n        return isAsc ? aValue - bValue : bValue - aValue;\n    }\n    if (Array.isArray(orderRule)) {\n        const [mode1, mode2] = Array.isArray(mode) ? mode : [mode, mode];\n        const [orderRule1, orderRule2] = orderRule;\n        const isAsc1 = mode1 === 'asc';\n        const isAsc2 = mode2 === 'asc';\n        return collection.sort((a, b) => {\n            return compareValues(a, b, orderRule1, isAsc1) || compareValues(a, b, orderRule2, isAsc2);\n        });\n    }\n    const isAsc = mode === 'asc';\n    return collection.sort((a, b) => {\n        return compareValues(a, b, orderRule, isAsc);\n    });\n}\nexport function unique(array) {\n    return Array.from(new Set(array));\n}\n","window.addEventListener('error', handleErrorEvent);\nwindow.addEventListener('unhandledrejection', handleErrorEvent);\nfunction handleErrorEvent(e) {\n    // https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded\n    if (e instanceof ErrorEvent && e.message === 'ResizeObserver loop limit exceeded') {\n        return;\n    }\n    e.preventDefault();\n    handleError(e instanceof ErrorEvent ? (e.error || e.message) : e.reason);\n}\nexport function handleError(err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n}\n","import { DEBUG_MORE } from '../config';\nimport { handleError } from './handleError';\nconst SAFE_EXEC_ENABLED = !DEBUG_MORE;\nexport default function safeExec(cb, rescue, always) {\n    if (!SAFE_EXEC_ENABLED) {\n        return cb();\n    }\n    try {\n        return cb();\n    }\n    catch (err) {\n        rescue?.(err);\n        handleError(err);\n        return undefined;\n    }\n    finally {\n        always?.();\n    }\n}\n","import { createCallbackManager } from './callbacks';\nconst SIGNAL_MARK = Symbol('SIGNAL_MARK');\nexport function isSignal(obj) {\n    return typeof obj === 'function' && SIGNAL_MARK in obj;\n}\n// A shorthand to unsubscribe effect from all signals\nconst unsubscribesByEffect = new Map();\nlet currentEffect;\nexport function createSignal(defaultValue) {\n    const state = {\n        value: defaultValue,\n        effects: createCallbackManager(),\n    };\n    function subscribe(effect) {\n        const unsubscribe = state.effects.addCallback(effect);\n        if (!unsubscribesByEffect.has(effect)) {\n            unsubscribesByEffect.set(effect, new Set([unsubscribe]));\n        }\n        else {\n            unsubscribesByEffect.get(effect).add(unsubscribe);\n        }\n        return () => {\n            unsubscribe();\n            const unsubscribes = unsubscribesByEffect.get(effect);\n            unsubscribes.delete(unsubscribe);\n            if (!unsubscribes.size) {\n                unsubscribesByEffect.delete(effect);\n            }\n        };\n    }\n    function getter() {\n        if (currentEffect) {\n            subscribe(currentEffect);\n        }\n        return state.value;\n    }\n    function setter(newValue) {\n        if (state.value === newValue) {\n            return;\n        }\n        state.value = newValue;\n        state.effects.runCallbacks();\n    }\n    const signal = Object.assign(getter, {\n        [SIGNAL_MARK]: SIGNAL_MARK,\n        subscribe,\n    });\n    return [signal, setter];\n}\nexport function cleanupEffect(effect) {\n    unsubscribesByEffect.get(effect)?.forEach((unsubscribe) => {\n        unsubscribe();\n    });\n    unsubscribesByEffect.delete(effect);\n}\n","import LAYOUT_CAUSES from './layoutCauses';\n// eslint-disable-next-line no-console\nconst DEFAULT_ERROR_HANDLER = console.error;\nlet onError = DEFAULT_ERROR_HANDLER;\nconst nativeMethods = new Map();\nlet phase = 'measure';\nlet isStrict = false;\nlet observer;\nexport function setPhase(newPhase) {\n    phase = newPhase;\n}\nexport function getPhase() {\n    return phase;\n}\nexport function enableStrict() {\n    if (isStrict)\n        return;\n    isStrict = true;\n    setupLayoutDetectors();\n    setupMutationObserver();\n}\nexport function disableStrict() {\n    if (!isStrict)\n        return;\n    clearMutationObserver();\n    clearLayoutDetectors();\n    isStrict = false;\n}\nexport function forceMeasure(cb) {\n    if (phase !== 'mutate') {\n        throw new Error('The current phase is \\'measure\\'');\n    }\n    phase = 'measure';\n    const result = cb();\n    phase = 'mutate';\n    return result;\n}\nexport function setHandler(handler) {\n    onError = handler || DEFAULT_ERROR_HANDLER;\n}\nfunction setupLayoutDetectors() {\n    Object.entries(LAYOUT_CAUSES).forEach(([name, causes]) => {\n        const entity = window[name];\n        if (!entity)\n            return;\n        const prototype = typeof entity === 'object' ? entity : entity.prototype;\n        if ('props' in causes) {\n            causes.props.forEach((prop) => {\n                const nativeGetter = Object.getOwnPropertyDescriptor(prototype, prop)?.get;\n                if (!nativeGetter) {\n                    return;\n                }\n                nativeMethods.set(`${name}#${prop}`, nativeGetter);\n                Object.defineProperty(prototype, prop, {\n                    get() {\n                        onMeasure(prop);\n                        return nativeGetter.call(this);\n                    },\n                });\n            });\n        }\n        if ('methods' in causes) {\n            causes.methods.forEach((method) => {\n                const nativeMethod = prototype[method];\n                nativeMethods.set(`${name}#${method}`, nativeMethod);\n                // eslint-disable-next-line func-names\n                prototype[method] = function (...args) {\n                    onMeasure(method);\n                    return nativeMethod.apply(this, args);\n                };\n            });\n        }\n    });\n}\nfunction clearLayoutDetectors() {\n    Object.entries(LAYOUT_CAUSES).forEach(([name, causes]) => {\n        const entity = window[name];\n        if (!entity)\n            return;\n        const prototype = typeof entity === 'object' ? entity : entity.prototype;\n        if ('props' in causes) {\n            causes.props.forEach((prop) => {\n                const nativeGetter = nativeMethods.get(`${name}#${prop}`);\n                if (!nativeGetter) {\n                    return;\n                }\n                Object.defineProperty(prototype, prop, { get: nativeGetter });\n            });\n        }\n        if ('methods' in causes) {\n            causes.methods.forEach((method) => {\n                prototype[method] = nativeMethods.get(`${name}#${method}`);\n            });\n        }\n    });\n    nativeMethods.clear();\n}\nfunction setupMutationObserver() {\n    observer = new MutationObserver((mutations) => {\n        if (phase !== 'mutate') {\n            mutations.forEach(({ target, type, attributeName }) => {\n                if (!document.contains(target)) {\n                    return;\n                }\n                if (type === 'childList' && target instanceof HTMLElement && target.contentEditable) {\n                    return;\n                }\n                if (attributeName?.startsWith('data-')) {\n                    return;\n                }\n                // eslint-disable-next-line no-console\n                onError(new Error(`Unexpected mutation detected: \\`${type === 'attributes' ? attributeName : type}\\``));\n            });\n        }\n    });\n    observer.observe(document.body, {\n        childList: true,\n        attributes: true,\n        subtree: true,\n        characterData: false,\n    });\n}\nfunction clearMutationObserver() {\n    observer?.disconnect();\n    observer = undefined;\n}\nfunction onMeasure(propName) {\n    if (phase !== 'measure') {\n        onError(new Error(`Unexpected measurement detected: \\`${propName}\\``));\n    }\n}\n","import { fastRaf, throttleWith } from '../../util/schedulers';\nimport safeExec from '../../util/safeExec';\nimport { setPhase } from './stricterdom';\nlet pendingMeasureTasks = [];\nlet pendingMutationTasks = [];\nlet pendingForceReflowTasks = [];\nconst runUpdatePassOnRaf = throttleWithRafFallback(() => {\n    const currentMeasureTasks = pendingMeasureTasks;\n    pendingMeasureTasks = [];\n    currentMeasureTasks.forEach((task) => {\n        safeExec(task);\n    });\n    // We use promises to provide correct order for Mutation Observer callback microtasks\n    Promise.resolve()\n        .then(() => {\n        setPhase('mutate');\n        const currentMutationTasks = pendingMutationTasks;\n        pendingMutationTasks = [];\n        currentMutationTasks.forEach((task) => {\n            safeExec(task);\n        });\n    })\n        .then(() => {\n        setPhase('measure');\n        const pendingForceReflowMutationTasks = [];\n        // Will include tasks created during the loop\n        for (const task of pendingForceReflowTasks) {\n            safeExec(() => {\n                const mutationTask = task();\n                if (mutationTask) {\n                    pendingForceReflowMutationTasks.push(mutationTask);\n                }\n            });\n        }\n        pendingForceReflowTasks = [];\n        return pendingForceReflowMutationTasks;\n    })\n        .then((pendingForceReflowMutationTasks) => {\n        setPhase('mutate');\n        // Will include tasks created during the loop\n        for (const task of pendingForceReflowMutationTasks) {\n            safeExec(task);\n        }\n    })\n        .then(() => {\n        setPhase('measure');\n    });\n});\nexport function requestMeasure(cb) {\n    pendingMeasureTasks.push(cb);\n    runUpdatePassOnRaf();\n}\nexport function requestMutation(cb) {\n    pendingMutationTasks.push(cb);\n    runUpdatePassOnRaf();\n}\nexport function requestNextMutation(cb) {\n    requestMeasure(() => {\n        requestMutation(cb);\n    });\n}\nexport function requestForcedReflow(cb) {\n    pendingForceReflowTasks.push(cb);\n    runUpdatePassOnRaf();\n}\nfunction throttleWithRafFallback(fn) {\n    return throttleWith((throttledFn) => {\n        fastRaf(throttledFn, true);\n    }, fn);\n}\nexport * from './stricterdom';\n","import { DEBUG, DEBUG_MORE } from '../config';\nimport { logUnequalProps } from '../util/arePropsShallowEqual';\nimport { incrementOverlayCounter } from '../util/debugOverlay';\nimport { orderBy } from '../util/iteratees';\nimport safeExec from '../util/safeExec';\nimport { throttleWith } from '../util/schedulers';\nimport { isSignal } from '../util/signals';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nexport var VirtualElementTypesEnum;\n(function (VirtualElementTypesEnum) {\n    VirtualElementTypesEnum[VirtualElementTypesEnum[\"Empty\"] = 0] = \"Empty\";\n    VirtualElementTypesEnum[VirtualElementTypesEnum[\"Text\"] = 1] = \"Text\";\n    VirtualElementTypesEnum[VirtualElementTypesEnum[\"Tag\"] = 2] = \"Tag\";\n    VirtualElementTypesEnum[VirtualElementTypesEnum[\"Component\"] = 3] = \"Component\";\n    VirtualElementTypesEnum[VirtualElementTypesEnum[\"Fragment\"] = 4] = \"Fragment\";\n})(VirtualElementTypesEnum || (VirtualElementTypesEnum = {}));\nexport var MountState;\n(function (MountState) {\n    MountState[MountState[\"New\"] = 0] = \"New\";\n    MountState[MountState[\"Mounted\"] = 1] = \"Mounted\";\n    MountState[MountState[\"Unmounted\"] = 2] = \"Unmounted\";\n})(MountState || (MountState = {}));\nconst Fragment = Symbol('Fragment');\nconst DEBUG_RENDER_THRESHOLD = 7;\nconst DEBUG_EFFECT_THRESHOLD = 7;\nconst DEBUG_SILENT_RENDERS_FOR = new Set(['TeactMemoWrapper', 'TeactNContainer', 'Button', 'ListItem', 'MenuItem']);\nlet lastComponentId = 0;\nlet renderingInstance;\nexport function isEmptyElement($element) {\n    return $element.type === VirtualElementTypesEnum.Empty;\n}\nexport function isTextElement($element) {\n    return $element.type === VirtualElementTypesEnum.Text;\n}\nexport function isTagElement($element) {\n    return $element.type === VirtualElementTypesEnum.Tag;\n}\nexport function isComponentElement($element) {\n    return $element.type === VirtualElementTypesEnum.Component;\n}\nexport function isFragmentElement($element) {\n    return $element.type === VirtualElementTypesEnum.Fragment;\n}\nexport function isParentElement($element) {\n    return isTagElement($element) || isComponentElement($element) || isFragmentElement($element);\n}\nfunction createElement(source, props, ...children) {\n    if (source === Fragment) {\n        return buildFragmentElement(children);\n    }\n    else if (typeof source === 'function') {\n        return createComponentInstance(source, props || {}, children);\n    }\n    else {\n        return buildTagElement(source, props || {}, children);\n    }\n}\nfunction buildFragmentElement(children) {\n    return {\n        type: VirtualElementTypesEnum.Fragment,\n        children: buildChildren(children, true),\n    };\n}\nfunction createComponentInstance(Component, props, children) {\n    if (children?.length) {\n        props.children = children.length === 1 ? children[0] : children;\n    }\n    const componentInstance = {\n        id: ++lastComponentId,\n        $element: undefined,\n        Component,\n        name: Component.name,\n        props,\n        mountState: MountState.New,\n    };\n    componentInstance.$element = buildComponentElement(componentInstance);\n    return componentInstance.$element;\n}\nfunction buildComponentElement(componentInstance, children) {\n    return {\n        type: VirtualElementTypesEnum.Component,\n        componentInstance,\n        props: componentInstance.props,\n        children: children ? buildChildren(children, true) : [],\n    };\n}\nfunction buildTagElement(tag, props, children) {\n    return {\n        type: VirtualElementTypesEnum.Tag,\n        tag,\n        props,\n        children: buildChildren(children),\n    };\n}\nfunction buildChildren(children, noEmpty = false) {\n    const cleanChildren = dropEmptyTail(children, noEmpty);\n    const newChildren = [];\n    for (let i = 0, l = cleanChildren.length; i < l; i++) {\n        const child = cleanChildren[i];\n        if (Array.isArray(child)) {\n            newChildren.push(...buildChildren(child, noEmpty));\n        }\n        else {\n            newChildren.push(buildChildElement(child));\n        }\n    }\n    return newChildren;\n}\n// We only need placeholders in the middle of collection (to ensure other elements order).\nfunction dropEmptyTail(children, noEmpty = false) {\n    let i = children.length - 1;\n    for (; i >= 0; i--) {\n        if (!isEmptyPlaceholder(children[i])) {\n            break;\n        }\n    }\n    if (i === children.length - 1) {\n        return children;\n    }\n    if (i === -1 && noEmpty) {\n        return children.slice(0, 1);\n    }\n    return children.slice(0, i + 1);\n}\nfunction isEmptyPlaceholder(child) {\n    return !child && child !== 0;\n}\nfunction buildChildElement(child) {\n    if (isEmptyPlaceholder(child)) {\n        return { type: VirtualElementTypesEnum.Empty };\n    }\n    else if (isParentElement(child)) {\n        return child;\n    }\n    else {\n        return {\n            type: VirtualElementTypesEnum.Text,\n            value: String(child),\n        };\n    }\n}\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst DEBUG_components = { TOTAL: { name: 'TOTAL', renders: 0 } };\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst DEBUG_memos = {};\nconst DEBUG_MEMOS_CALLS_THRESHOLD = 20;\ndocument.addEventListener('dblclick', () => {\n    // eslint-disable-next-line no-console\n    console.warn('COMPONENTS', orderBy(Object\n        .values(DEBUG_components)\n        .map(({ avgRenderTime, ...state }) => {\n        return { ...state, ...(avgRenderTime !== undefined && { avgRenderTime: Number(avgRenderTime.toFixed(2)) }) };\n    }), 'renders', 'desc'));\n    // eslint-disable-next-line no-console\n    console.warn('MEMOS', orderBy(Object\n        .values(DEBUG_memos)\n        .filter(({ calls }) => calls >= DEBUG_MEMOS_CALLS_THRESHOLD)\n        .map((state) => ({ ...state, hitRate: Number(state.hitRate.toFixed(2)) })), 'hitRate', 'asc'));\n});\nlet instancesPendingUpdate = new Set();\nlet idsToExcludeFromUpdate = new Set();\nlet pendingEffects = new Map();\nlet pendingCleanups = new Map();\nlet pendingLayoutEffects = new Map();\nlet pendingLayoutCleanups = new Map();\nlet areImmediateEffectsCaptured = false;\n/*\n  Order:\n  - component effect cleanups\n  - component effects\n  - measure tasks\n  - mutation tasks\n  - component updates\n  - component layout effect cleanups\n  - component layout effects\n  - forced layout measure tasks\n  - forced layout mutation tasks\n */\nconst runUpdatePassOnRaf = throttleWith(requestMeasure, () => {\n    const runImmediateEffects = captureImmediateEffects();\n    idsToExcludeFromUpdate = new Set();\n    const instancesToUpdate = Array\n        .from(instancesPendingUpdate)\n        .sort((a, b) => a.id - b.id);\n    instancesPendingUpdate = new Set();\n    const currentCleanups = pendingCleanups;\n    pendingCleanups = new Map();\n    currentCleanups.forEach((cb) => cb());\n    const currentEffects = pendingEffects;\n    pendingEffects = new Map();\n    currentEffects.forEach((cb) => cb());\n    requestMutation(() => {\n        instancesToUpdate.forEach(prepareComponentForFrame);\n        instancesToUpdate.forEach((instance) => {\n            if (idsToExcludeFromUpdate.has(instance.id)) {\n                return;\n            }\n            forceUpdateComponent(instance);\n        });\n        runImmediateEffects?.();\n    });\n});\nexport function captureImmediateEffects() {\n    if (areImmediateEffectsCaptured) {\n        return undefined;\n    }\n    areImmediateEffectsCaptured = true;\n    return runCapturedImmediateEffects;\n}\nfunction runCapturedImmediateEffects() {\n    const currentLayoutCleanups = pendingLayoutCleanups;\n    pendingLayoutCleanups = new Map();\n    currentLayoutCleanups.forEach((cb) => cb());\n    const currentLayoutEffects = pendingLayoutEffects;\n    pendingLayoutEffects = new Map();\n    currentLayoutEffects.forEach((cb) => cb());\n    areImmediateEffectsCaptured = false;\n}\nexport function renderComponent(componentInstance) {\n    idsToExcludeFromUpdate.add(componentInstance.id);\n    const { Component, props } = componentInstance;\n    let newRenderedValue;\n    safeExec(() => {\n        renderingInstance = componentInstance;\n        if (componentInstance.hooks) {\n            if (componentInstance.hooks.state) {\n                componentInstance.hooks.state.cursor = 0;\n            }\n            if (componentInstance.hooks.effects) {\n                componentInstance.hooks.effects.cursor = 0;\n            }\n            if (componentInstance.hooks.memos) {\n                componentInstance.hooks.memos.cursor = 0;\n            }\n            if (componentInstance.hooks.refs) {\n                componentInstance.hooks.refs.cursor = 0;\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        let DEBUG_startAt;\n        if (DEBUG) {\n            const componentName = DEBUG_resolveComponentName(Component);\n            if (!DEBUG_components[componentName]) {\n                DEBUG_components[componentName] = {\n                    name: componentName,\n                    renders: 0,\n                    avgRenderTime: 0,\n                };\n            }\n            if (DEBUG_MORE) {\n                if (!DEBUG_SILENT_RENDERS_FOR.has(componentName)) {\n                    // eslint-disable-next-line no-console\n                    console.log(`[Teact] Render ${componentName}`);\n                }\n            }\n            DEBUG_startAt = performance.now();\n        }\n        newRenderedValue = Component(props);\n        if (DEBUG) {\n            const duration = performance.now() - DEBUG_startAt;\n            const componentName = DEBUG_resolveComponentName(Component);\n            if (duration > DEBUG_RENDER_THRESHOLD) {\n                // eslint-disable-next-line no-console\n                console.warn(`[Teact] Slow component render: ${componentName}, ${Math.round(duration)} ms`);\n            }\n            const { renders, avgRenderTime } = DEBUG_components[componentName];\n            DEBUG_components[componentName].avgRenderTime = (avgRenderTime * renders + duration) / (renders + 1);\n            DEBUG_components[componentName].renders++;\n            DEBUG_components.TOTAL.renders++;\n            if (DEBUG_MORE) {\n                incrementOverlayCounter(`${componentName} renders`);\n                incrementOverlayCounter(`${componentName} duration`, duration);\n            }\n        }\n    }, () => {\n        // eslint-disable-next-line no-console\n        console.error(`[Teact] Error while rendering component ${componentInstance.name}`);\n        newRenderedValue = componentInstance.renderedValue;\n    });\n    if (componentInstance.mountState === MountState.Mounted && newRenderedValue === componentInstance.renderedValue) {\n        return componentInstance.$element;\n    }\n    componentInstance.renderedValue = newRenderedValue;\n    const children = Array.isArray(newRenderedValue) ? newRenderedValue : [newRenderedValue];\n    if (componentInstance.mountState === MountState.New) {\n        componentInstance.$element.children = buildChildren(children, true);\n    }\n    else {\n        componentInstance.$element = buildComponentElement(componentInstance, children);\n    }\n    return componentInstance.$element;\n}\nexport function hasElementChanged($old, $new) {\n    if (typeof $old !== typeof $new) {\n        return true;\n    }\n    else if ($old.type !== $new.type) {\n        return true;\n    }\n    else if (isTextElement($old) && isTextElement($new)) {\n        return $old.value !== $new.value;\n    }\n    else if (isTagElement($old) && isTagElement($new)) {\n        return ($old.tag !== $new.tag) || ($old.props.key !== $new.props.key);\n    }\n    else if (isComponentElement($old) && isComponentElement($new)) {\n        return ($old.componentInstance.Component !== $new.componentInstance.Component) || ($old.props.key !== $new.props.key);\n    }\n    return false;\n}\nexport function mountComponent(componentInstance) {\n    renderComponent(componentInstance);\n    componentInstance.mountState = MountState.Mounted;\n    return componentInstance.$element;\n}\nexport function unmountComponent(componentInstance) {\n    if (componentInstance.mountState !== MountState.Mounted) {\n        return;\n    }\n    idsToExcludeFromUpdate.add(componentInstance.id);\n    if (componentInstance.hooks?.effects) {\n        for (const effect of componentInstance.hooks.effects.byCursor) {\n            if (effect.cleanup) {\n                safeExec(effect.cleanup);\n            }\n            effect.cleanup = undefined;\n            effect.releaseSignals?.();\n        }\n    }\n    componentInstance.mountState = MountState.Unmounted;\n    // helpGc(componentInstance);\n}\n// We need to remove all references to DOM objects. We also clean all other references, just in case\nfunction helpGc(componentInstance) {\n    const { effects, state, memos, refs, } = componentInstance.hooks || {};\n    if (effects) {\n        for (const hook of effects.byCursor) {\n            hook.schedule = undefined;\n            hook.cleanup = undefined;\n            hook.releaseSignals = undefined;\n            hook.dependencies = undefined;\n        }\n    }\n    if (state) {\n        for (const hook of state.byCursor) {\n            hook.value = undefined;\n            hook.nextValue = undefined;\n            hook.setter = undefined;\n        }\n    }\n    if (memos) {\n        for (const hook of memos.byCursor) {\n            hook.value = undefined;\n            hook.dependencies = undefined;\n        }\n    }\n    if (refs) {\n        for (const hook of refs.byCursor) {\n            hook.current = undefined;\n        }\n    }\n    componentInstance.hooks = undefined;\n    componentInstance.$element = undefined;\n    componentInstance.renderedValue = undefined;\n    componentInstance.Component = undefined;\n    componentInstance.props = undefined;\n    componentInstance.onUpdate = undefined;\n}\nfunction prepareComponentForFrame(componentInstance) {\n    if (componentInstance.mountState !== MountState.Mounted) {\n        return;\n    }\n    if (componentInstance.hooks?.state) {\n        for (const hook of componentInstance.hooks.state.byCursor) {\n            hook.value = hook.nextValue;\n        }\n    }\n}\nfunction forceUpdateComponent(componentInstance) {\n    if (componentInstance.mountState !== MountState.Mounted || !componentInstance.onUpdate) {\n        return;\n    }\n    const currentElement = componentInstance.$element;\n    renderComponent(componentInstance);\n    if (componentInstance.$element !== currentElement) {\n        componentInstance.onUpdate();\n    }\n}\nexport function useState(initial, debugKey) {\n    if (!renderingInstance.hooks) {\n        renderingInstance.hooks = {};\n    }\n    if (!renderingInstance.hooks.state) {\n        renderingInstance.hooks.state = { cursor: 0, byCursor: [] };\n    }\n    const { cursor, byCursor } = renderingInstance.hooks.state;\n    const componentInstance = renderingInstance;\n    if (byCursor[cursor] === undefined) {\n        byCursor[cursor] = {\n            value: initial,\n            nextValue: initial,\n            setter: (newValue) => {\n                if (componentInstance.mountState === MountState.Unmounted) {\n                    return;\n                }\n                if (typeof newValue === 'function') {\n                    newValue = newValue(byCursor[cursor].nextValue);\n                }\n                if (byCursor[cursor].nextValue === newValue) {\n                    return;\n                }\n                byCursor[cursor].nextValue = newValue;\n                instancesPendingUpdate.add(componentInstance);\n                runUpdatePassOnRaf();\n                if (DEBUG_MORE) {\n                    // eslint-disable-next-line no-console\n                    console.log('[Teact.useState]', DEBUG_resolveComponentName(componentInstance.Component), `State update at cursor #${cursor}${debugKey ? ` (${debugKey})` : ''}, next value: `, byCursor[cursor].nextValue);\n                }\n            },\n        };\n    }\n    renderingInstance.hooks.state.cursor++;\n    return [\n        byCursor[cursor].value,\n        byCursor[cursor].setter,\n    ];\n}\nfunction useEffectBase(isLayout, effect, dependencies, debugKey) {\n    if (!renderingInstance.hooks) {\n        renderingInstance.hooks = {};\n    }\n    if (!renderingInstance.hooks.effects) {\n        renderingInstance.hooks.effects = { cursor: 0, byCursor: [] };\n    }\n    const { cursor, byCursor } = renderingInstance.hooks.effects;\n    const componentInstance = renderingInstance;\n    const runEffectCleanup = () => safeExec(() => {\n        const { cleanup } = byCursor[cursor];\n        if (!cleanup) {\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        let DEBUG_startAt;\n        if (DEBUG) {\n            DEBUG_startAt = performance.now();\n        }\n        cleanup();\n        if (DEBUG) {\n            const duration = performance.now() - DEBUG_startAt;\n            const componentName = DEBUG_resolveComponentName(componentInstance.Component);\n            if (duration > DEBUG_EFFECT_THRESHOLD) {\n                // eslint-disable-next-line no-console\n                console.warn(`[Teact] Slow cleanup at effect cursor #${cursor}: ${componentName}, ${Math.round(duration)} ms`);\n            }\n        }\n    }, () => {\n        // eslint-disable-next-line no-console\n        console.error(`[Teact] Error in effect cleanup at cursor #${cursor} in ${componentInstance.name}`);\n    }, () => {\n        byCursor[cursor].cleanup = undefined;\n    });\n    const runEffect = () => safeExec(() => {\n        if (componentInstance.mountState === MountState.Unmounted) {\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        let DEBUG_startAt;\n        if (DEBUG) {\n            DEBUG_startAt = performance.now();\n        }\n        const result = effect();\n        if (typeof result === 'function') {\n            byCursor[cursor].cleanup = result;\n        }\n        if (DEBUG) {\n            const duration = performance.now() - DEBUG_startAt;\n            const componentName = DEBUG_resolveComponentName(componentInstance.Component);\n            if (duration > DEBUG_EFFECT_THRESHOLD) {\n                // eslint-disable-next-line no-console\n                console.warn(`[Teact] Slow effect at cursor #${cursor}: ${componentName}, ${Math.round(duration)} ms`);\n            }\n        }\n    }, () => {\n        // eslint-disable-next-line no-console\n        console.error(`[Teact] Error in effect at cursor #${cursor} in ${componentInstance.name}`);\n    });\n    function schedule() {\n        const effectId = `${componentInstance.id}_${cursor}`;\n        if (isLayout) {\n            pendingLayoutCleanups.set(effectId, runEffectCleanup);\n            pendingLayoutEffects.set(effectId, runEffect);\n        }\n        else {\n            pendingCleanups.set(effectId, runEffectCleanup);\n            pendingEffects.set(effectId, runEffect);\n        }\n        runUpdatePassOnRaf();\n    }\n    if (dependencies && byCursor[cursor]?.dependencies) {\n        if (dependencies.some((dependency, i) => dependency !== byCursor[cursor].dependencies[i])) {\n            if (DEBUG && debugKey) {\n                const causedBy = dependencies.reduce((res, newValue, i) => {\n                    const prevValue = byCursor[cursor].dependencies[i];\n                    if (newValue !== prevValue) {\n                        res.push(`${i}: ${prevValue} => ${newValue}`);\n                    }\n                    return res;\n                }, []);\n                // eslint-disable-next-line no-console\n                console.log(`[Teact] Effect \"${debugKey}\" caused by dependencies.`, causedBy.join(', '));\n            }\n            schedule();\n        }\n    }\n    else {\n        if (debugKey) {\n            // eslint-disable-next-line no-console\n            console.log(`[Teact] Effect \"${debugKey}\" caused by missing dependencies.`);\n        }\n        schedule();\n    }\n    const isFirstRun = !byCursor[cursor];\n    byCursor[cursor] = {\n        ...byCursor[cursor],\n        dependencies,\n        schedule,\n    };\n    function setupSignals() {\n        const cleanups = dependencies?.filter(isSignal).map((signal, i) => signal.subscribe(() => {\n            if (debugKey) {\n                // eslint-disable-next-line no-console\n                console.log(`[Teact] Effect \"${debugKey}\" caused by signal #${i} new value:`, signal());\n            }\n            byCursor[cursor].schedule();\n        }));\n        if (!cleanups?.length) {\n            return undefined;\n        }\n        return () => {\n            for (const cleanup of cleanups) {\n                cleanup();\n            }\n        };\n    }\n    if (isFirstRun) {\n        byCursor[cursor].releaseSignals = setupSignals();\n    }\n    renderingInstance.hooks.effects.cursor++;\n}\nexport function useEffect(effect, dependencies, debugKey) {\n    return useEffectBase(false, effect, dependencies, debugKey);\n}\nexport function useLayoutEffect(effect, dependencies, debugKey) {\n    return useEffectBase(true, effect, dependencies, debugKey);\n}\nexport function useMemo(resolver, dependencies, debugKey, debugHitRateKey) {\n    if (!renderingInstance.hooks) {\n        renderingInstance.hooks = {};\n    }\n    if (!renderingInstance.hooks.memos) {\n        renderingInstance.hooks.memos = { cursor: 0, byCursor: [] };\n    }\n    const { cursor, byCursor } = renderingInstance.hooks.memos;\n    let { value } = byCursor[cursor] || {};\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    let DEBUG_state;\n    if (DEBUG && debugHitRateKey) {\n        const instanceKey = `${debugHitRateKey}#${renderingInstance.id}`;\n        DEBUG_state = DEBUG_memos[instanceKey];\n        if (!DEBUG_state) {\n            DEBUG_state = {\n                key: instanceKey, calls: 0, misses: 0, hitRate: 0,\n            };\n            DEBUG_memos[instanceKey] = DEBUG_state;\n        }\n        DEBUG_state.calls++;\n        DEBUG_state.hitRate = (DEBUG_state.calls - DEBUG_state.misses) / DEBUG_state.calls;\n    }\n    if (byCursor[cursor] === undefined\n        || dependencies.length !== byCursor[cursor].dependencies.length\n        || dependencies.some((dependency, i) => dependency !== byCursor[cursor].dependencies[i])) {\n        if (DEBUG) {\n            if (debugKey) {\n                const msg = `[Teact.useMemo] ${renderingInstance.name} (${debugKey}): Update is caused by:`;\n                if (!byCursor[cursor]) {\n                    // eslint-disable-next-line no-console\n                    console.log(`${msg} [first render]`);\n                }\n                else {\n                    logUnequalProps(byCursor[cursor].dependencies, dependencies, msg, debugKey);\n                }\n            }\n            if (DEBUG_state) {\n                DEBUG_state.misses++;\n                DEBUG_state.hitRate = (DEBUG_state.calls - DEBUG_state.misses) / DEBUG_state.calls;\n                if (DEBUG_state.calls % 10 === 0\n                    && DEBUG_state.calls >= DEBUG_MEMOS_CALLS_THRESHOLD\n                    && DEBUG_state.hitRate < 0.25) {\n                    // eslint-disable-next-line no-console\n                    console.warn(\n                    // eslint-disable-next-line max-len\n                    `[Teact] ${DEBUG_state.key}: Hit rate is ${DEBUG_state.hitRate.toFixed(2)} for ${DEBUG_state.calls} calls`);\n                }\n            }\n        }\n        value = resolver();\n    }\n    byCursor[cursor] = {\n        value,\n        dependencies,\n    };\n    renderingInstance.hooks.memos.cursor++;\n    return value;\n}\nexport function useCallback(newCallback, dependencies, debugKey) {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    return useMemo(() => newCallback, dependencies, debugKey);\n}\n// eslint-disable-next-line no-null/no-null\nexport function useRef(initial) {\n    if (!renderingInstance.hooks) {\n        renderingInstance.hooks = {};\n    }\n    if (!renderingInstance.hooks.refs) {\n        renderingInstance.hooks.refs = { cursor: 0, byCursor: [] };\n    }\n    const { cursor, byCursor } = renderingInstance.hooks.refs;\n    if (!byCursor[cursor]) {\n        byCursor[cursor] = {\n            current: initial,\n        };\n    }\n    renderingInstance.hooks.refs.cursor++;\n    return byCursor[cursor];\n}\nexport function memo(Component, debugKey) {\n    function TeactMemoWrapper(props) {\n        return useMemo(() => createElement(Component, props), \n        // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n        Object.values(props), debugKey, DEBUG_MORE ? DEBUG_resolveComponentName(renderingInstance.Component) : undefined);\n    }\n    TeactMemoWrapper.DEBUG_contentComponentName = DEBUG_resolveComponentName(Component);\n    return TeactMemoWrapper;\n}\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function DEBUG_resolveComponentName(Component) {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const { name, DEBUG_contentComponentName } = Component;\n    if (name === 'TeactNContainer') {\n        return `container>${DEBUG_contentComponentName}`;\n    }\n    if (name === 'TeactMemoWrapper') {\n        return `memo>${DEBUG_contentComponentName}`;\n    }\n    return name + (DEBUG_contentComponentName ? `>${DEBUG_contentComponentName}` : '');\n}\nexport default {\n    createElement,\n    Fragment,\n};\n","export default function arePropsShallowEqual(currentProps, newProps) {\n    if (currentProps === newProps) {\n        return true;\n    }\n    const currentKeys = Object.keys(currentProps);\n    const currentKeysLength = currentKeys.length;\n    const newKeysLength = Object.keys(newProps).length;\n    if (currentKeysLength !== newKeysLength) {\n        return false;\n    }\n    if (currentKeysLength === 0) {\n        return true;\n    }\n    for (let i = 0; i < currentKeysLength; i++) {\n        const prop = currentKeys[i];\n        if (currentProps[prop] !== newProps[prop]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function logUnequalProps(currentProps, newProps, msg, debugKey = '') {\n    const currentKeys = Object.keys(currentProps);\n    const currentKeysLength = currentKeys.length;\n    const newKeysLength = Object.keys(newProps).length;\n    if (currentKeysLength !== newKeysLength) {\n        // eslint-disable-next-line no-console\n        console.log(`${msg} LENGTH`);\n        return;\n    }\n    // eslint-disable-next-line no-console\n    console.log(msg);\n    currentKeys.forEach((res, prop) => {\n        if (currentProps[prop] !== newProps[prop]) {\n            // eslint-disable-next-line no-console\n            console.log(debugKey, prop, ':', currentProps[prop], '=>', newProps[prop]);\n        }\n    });\n}\n","import { DEBUG } from '../config';\nconst NON_BUBBLEABLE_EVENTS = new Set(['scroll', 'mouseenter', 'mouseleave', 'load']);\nconst documentEventCounters = {};\nconst delegationRegistryByEventType = {};\nconst delegatedEventTypesByElement = new Map();\nexport function addEventListener(element, propName, handler, asCapture = false) {\n    const eventType = resolveEventType(propName, element);\n    if (canUseEventDelegation(eventType, element, asCapture)) {\n        addDelegatedListener(eventType, element, handler);\n    }\n    else {\n        element.addEventListener(eventType, handler, asCapture);\n    }\n}\nexport function removeEventListener(element, propName, handler, asCapture = false) {\n    const eventType = resolveEventType(propName, element);\n    if (canUseEventDelegation(eventType, element, asCapture)) {\n        removeDelegatedListener(eventType, element);\n    }\n    else {\n        element.removeEventListener(eventType, handler, asCapture);\n    }\n}\nfunction resolveEventType(propName, element) {\n    const eventType = propName\n        .replace(/^on/, '')\n        .replace(/Capture$/, '').toLowerCase();\n    if (eventType === 'change' && element.tagName !== 'SELECT') {\n        // React behavior repeated here.\n        // https://stackoverflow.com/questions/38256332/in-react-whats-the-difference-between-onchange-and-oninput\n        return 'input';\n    }\n    if (eventType === 'doubleclick') {\n        return 'dblclick';\n    }\n    // Replace focus/blur by their \"bubbleable\" versions\n    if (eventType === 'focus') {\n        return 'focusin';\n    }\n    if (eventType === 'blur') {\n        return 'focusout';\n    }\n    return eventType;\n}\nfunction canUseEventDelegation(realEventType, element, asCapture) {\n    return (!asCapture\n        && !NON_BUBBLEABLE_EVENTS.has(realEventType)\n        && element.tagName !== 'VIDEO'\n        && element.tagName !== 'IFRAME');\n}\nfunction addDelegatedListener(eventType, element, handler) {\n    if (!documentEventCounters[eventType]) {\n        documentEventCounters[eventType] = 0;\n        document.addEventListener(eventType, handleEvent);\n    }\n    resolveDelegationRegistry(eventType).set(element, handler);\n    resolveDelegatedEventTypes(element).add(eventType);\n    documentEventCounters[eventType]++;\n}\nfunction removeDelegatedListener(eventType, element) {\n    documentEventCounters[eventType]--;\n    if (!documentEventCounters[eventType]) {\n        // Synchronous deletion on 0 will cause perf degradation in the case of 1 element\n        // which is not a real case, so it's ok to do it this way\n        document.removeEventListener(eventType, handleEvent);\n    }\n    delegationRegistryByEventType[eventType].delete(element);\n    delegatedEventTypesByElement.get(element)?.delete(eventType);\n}\nexport function removeAllDelegatedListeners(element) {\n    const eventTypes = delegatedEventTypesByElement.get(element);\n    if (!eventTypes) {\n        return;\n    }\n    delegatedEventTypesByElement.delete(element);\n    eventTypes.forEach((eventType) => removeDelegatedListener(eventType, element));\n}\nfunction handleEvent(realEvent) {\n    const events = delegationRegistryByEventType[realEvent.type];\n    if (events) {\n        let furtherCallsPrevented = false;\n        let current = realEvent.target;\n        const stopPropagation = () => {\n            furtherCallsPrevented = true;\n        };\n        const preventDefault = () => {\n            realEvent.preventDefault();\n        };\n        // Proxy is a simplest way to provide an access to the event property\n        const event = new Proxy(realEvent, {\n            get(target, p) {\n                if (p === 'currentTarget') {\n                    return current;\n                }\n                if (p === 'stopPropagation' || p === 'stopImmediatePropagation') {\n                    return stopPropagation;\n                }\n                if (p === 'preventDefault') {\n                    // \"this\" is changed to proxy and one can't call methods via it\n                    return preventDefault;\n                }\n                return Reflect.get(target, p);\n            },\n        });\n        // This can also be limited by teact root\n        while (current && current !== document.body) {\n            const handler = events.get(current);\n            if (handler) {\n                handler(event);\n                if (furtherCallsPrevented) {\n                    return;\n                }\n            }\n            current = current.parentNode;\n        }\n    }\n}\nfunction resolveDelegationRegistry(eventType) {\n    if (!delegationRegistryByEventType[eventType]) {\n        delegationRegistryByEventType[eventType] = new Map();\n    }\n    return delegationRegistryByEventType[eventType];\n}\nfunction resolveDelegatedEventTypes(element) {\n    const existing = delegatedEventTypesByElement.get(element);\n    if (existing) {\n        return existing;\n    }\n    const newSet = new Set();\n    delegatedEventTypesByElement.set(element, newSet);\n    return newSet;\n}\nif (DEBUG) {\n    document.addEventListener('dblclick', () => {\n        const documentListenersCount = Object.keys(documentEventCounters).length;\n        const delegatedHandlersCount1 = Object.values(documentEventCounters)\n            .reduce((acc, counter) => acc + counter, 0);\n        const delegationRegistriesCount = Object.keys(delegationRegistryByEventType).length;\n        const delegatedHandlersCount2 = Object.values(delegationRegistryByEventType)\n            .reduce((acc, delegationRegistry) => acc + delegationRegistry.size, 0);\n        const delegationElementsCount = delegatedEventTypesByElement.size;\n        const delegatedEventTypesCount = Array.from(delegatedEventTypesByElement.values())\n            .reduce((acc, eventTypes) => acc + eventTypes.size, 0);\n        // eslint-disable-next-line no-console\n        console.warn('DELEGATED EVENTS STATS', {\n            delegatedHandlersCount1,\n            delegatedHandlersCount2,\n            delegatedEventTypesCount,\n            delegationRegistriesCount,\n            delegationElementsCount,\n            documentListenersCount,\n        });\n    });\n}\n","import { captureImmediateEffects, hasElementChanged, isComponentElement, isEmptyElement, isFragmentElement, isParentElement, isTagElement, isTextElement, mountComponent, MountState, renderComponent, unmountComponent, VirtualElementTypesEnum, } from './teact';\nimport { DEBUG } from '../config';\nimport { addEventListener, removeAllDelegatedListeners, removeEventListener } from './dom-events';\nimport { unique } from '../util/iteratees';\nconst FILTERED_ATTRIBUTES = new Set(['key', 'ref', 'teactFastList', 'teactOrderKey']);\nconst HTML_ATTRIBUTES = new Set(['dir', 'role', 'form']);\nconst CONTROLLABLE_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\nconst MAPPED_ATTRIBUTES = {\n    autoPlay: 'autoplay',\n    autoComplete: 'autocomplete',\n};\nconst INDEX_KEY_PREFIX = '__indexKey#';\nconst headsByElement = new WeakMap();\nconst extraClasses = new WeakMap();\nconst extraStyles = new WeakMap();\nfunction render($element, parentEl) {\n    if (!headsByElement.has(parentEl)) {\n        headsByElement.set(parentEl, { children: [] });\n    }\n    const runImmediateEffects = captureImmediateEffects();\n    const $head = headsByElement.get(parentEl);\n    const $renderedChild = renderWithVirtual(parentEl, $head.children[0], $element, $head, 0);\n    runImmediateEffects?.();\n    $head.children = $renderedChild ? [$renderedChild] : [];\n    return undefined;\n}\nfunction renderWithVirtual(parentEl, $current, $new, $parent, index, options = {}) {\n    const { skipComponentUpdate, fragment } = options;\n    let { nextSibling } = options;\n    const isCurrentComponent = $current && isComponentElement($current);\n    const isNewComponent = $new && isComponentElement($new);\n    const $newAsReal = $new;\n    const isCurrentFragment = $current && !isCurrentComponent && isFragmentElement($current);\n    const isNewFragment = $new && !isNewComponent && isFragmentElement($new);\n    if (!skipComponentUpdate\n        && isCurrentComponent && isNewComponent\n        && !hasElementChanged($current, $new)) {\n        $new = updateComponent($current, $new);\n    }\n    // Parent element may have changed, so we need to update the listener closure.\n    if (!skipComponentUpdate\n        && isNewComponent\n        && $new.componentInstance.mountState === MountState.Mounted) {\n        setupComponentUpdateListener(parentEl, $new, $parent, index);\n    }\n    if ($current === $new) {\n        return $new;\n    }\n    if (DEBUG && $new) {\n        const newTarget = 'target' in $new && $new.target;\n        if (newTarget && (!$current || ('target' in $current && newTarget !== $current.target))) {\n            throw new Error('[Teact] Cached virtual element was moved within tree');\n        }\n    }\n    if (!$current && $new) {\n        if (isNewComponent || isNewFragment) {\n            if (isNewComponent) {\n                $new = initComponent(parentEl, $new, $parent, index);\n            }\n            mountChildren(parentEl, $new, { nextSibling, fragment });\n        }\n        else {\n            const canSetText = $parent.children.length === 1 && isTextElement($newAsReal);\n            if (canSetText) {\n                parentEl.textContent = 'value' in $newAsReal ? $newAsReal.value : '';\n                $newAsReal.target = parentEl.firstChild;\n            }\n            else {\n                const node = createNode($newAsReal);\n                $newAsReal.target = node;\n                insertBefore(fragment || parentEl, node, nextSibling);\n                if (isTagElement($newAsReal)) {\n                    setElementRef($newAsReal, node);\n                }\n            }\n        }\n    }\n    else if ($current && !$new) {\n        remount(parentEl, $current, undefined);\n    }\n    else if ($current && $new) {\n        if (hasElementChanged($current, $new)) {\n            if (!nextSibling) {\n                nextSibling = getNextSibling($current);\n            }\n            if (isNewComponent || isNewFragment) {\n                if (isNewComponent) {\n                    $new = initComponent(parentEl, $new, $parent, index);\n                }\n                remount(parentEl, $current, undefined);\n                mountChildren(parentEl, $new, { nextSibling, fragment });\n            }\n            else {\n                const canSetText = $parent.children.length === 1\n                    && isTextElement($newAsReal)\n                    && (isTextElement($current) || isEmptyElement($current))\n                    && (!parentEl.firstChild || parentEl.firstChild === $current.target);\n                if (canSetText) {\n                    const value = 'value' in $newAsReal ? $newAsReal.value : '';\n                    if (parentEl.firstChild) {\n                        parentEl.firstChild.nodeValue = value;\n                    }\n                    else {\n                        parentEl.textContent = value;\n                    }\n                    $newAsReal.target = parentEl.firstChild;\n                }\n                else {\n                    const node = createNode($newAsReal);\n                    $newAsReal.target = node;\n                    remount(parentEl, $current, node, nextSibling);\n                    if (isTagElement($newAsReal)) {\n                        setElementRef($newAsReal, node);\n                    }\n                }\n            }\n        }\n        else {\n            const isComponent = isCurrentComponent && isNewComponent;\n            const isFragment = isCurrentFragment && isNewFragment;\n            if (isComponent || isFragment) {\n                renderChildren($current, $new, parentEl, nextSibling, options.forceMoveToEnd);\n            }\n            else {\n                const $currentAsReal = $current;\n                const currentTarget = $currentAsReal.target;\n                $newAsReal.target = currentTarget;\n                $currentAsReal.target = undefined; // Help GC\n                const isTag = isTagElement($current);\n                if (isTag) {\n                    const $newAsTag = $new;\n                    setElementRef($current, undefined);\n                    setElementRef($newAsTag, currentTarget);\n                    if (nextSibling || options.forceMoveToEnd) {\n                        insertBefore(parentEl, currentTarget, nextSibling);\n                    }\n                    updateAttributes($current, $newAsTag, currentTarget);\n                    renderChildren($current, $newAsTag, currentTarget);\n                }\n            }\n        }\n    }\n    return $new;\n}\nfunction initComponent(parentEl, $element, $parent, index) {\n    const { componentInstance } = $element;\n    if (componentInstance.mountState === MountState.New) {\n        $element = mountComponent(componentInstance);\n        setupComponentUpdateListener(parentEl, $element, $parent, index);\n        const $firstChild = $element.children[0];\n        if (isComponentElement($firstChild)) {\n            $element.children[0] = initComponent(parentEl, $firstChild, $element, 0);\n        }\n    }\n    return $element;\n}\nfunction updateComponent($current, $new) {\n    $current.componentInstance.props = $new.componentInstance.props;\n    return renderComponent($current.componentInstance);\n}\nfunction setupComponentUpdateListener(parentEl, $element, $parent, index) {\n    const { componentInstance } = $element;\n    componentInstance.onUpdate = () => {\n        $parent.children[index] = renderWithVirtual(parentEl, $parent.children[index], componentInstance.$element, $parent, index, { skipComponentUpdate: true });\n    };\n}\nfunction mountChildren(parentEl, $element, options) {\n    const { children } = $element;\n    for (let i = 0, l = children.length; i < l; i++) {\n        const $child = children[i];\n        const $renderedChild = renderWithVirtual(parentEl, undefined, $child, $element, i, options);\n        if ($renderedChild !== $child) {\n            children.splice(i, 1, $renderedChild);\n        }\n    }\n}\nfunction unmountChildren(parentEl, $element) {\n    for (const $child of $element.children) {\n        renderWithVirtual(parentEl, $child, undefined, $element, -1);\n    }\n}\nfunction createNode($element) {\n    if (isEmptyElement($element)) {\n        return document.createTextNode('');\n    }\n    if (isTextElement($element)) {\n        return document.createTextNode($element.value);\n    }\n    const { tag, props, children } = $element;\n    const element = document.createElement(tag);\n    processControlled(tag, props);\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in props) {\n        if (!props.hasOwnProperty(key))\n            continue;\n        if (props[key] !== undefined) {\n            setAttribute(element, key, props[key]);\n        }\n    }\n    processUncontrolledOnMount(element, props);\n    for (let i = 0, l = children.length; i < l; i++) {\n        const $child = children[i];\n        const $renderedChild = renderWithVirtual(element, undefined, $child, $element, i);\n        if ($renderedChild !== $child) {\n            children.splice(i, 1, $renderedChild);\n        }\n    }\n    return element;\n}\nfunction remount(parentEl, $current, node, componentNextSibling) {\n    const isComponent = isComponentElement($current);\n    const isFragment = !isComponent && isFragmentElement($current);\n    if (isComponent || isFragment) {\n        if (isComponent) {\n            unmountComponent($current.componentInstance);\n        }\n        unmountChildren(parentEl, $current);\n        if (node) {\n            insertBefore(parentEl, node, componentNextSibling);\n        }\n    }\n    else {\n        if (node) {\n            parentEl.replaceChild(node, $current.target);\n        }\n        else {\n            parentEl.removeChild($current.target);\n        }\n        unmountRealTree($current);\n    }\n}\nfunction unmountRealTree($element) {\n    if ($element.type === VirtualElementTypesEnum.Component) {\n        unmountComponent($element.componentInstance);\n    }\n    else if ($element.type !== VirtualElementTypesEnum.Fragment) {\n        if (isTagElement($element)) {\n            extraClasses.delete($element.target);\n            setElementRef($element, undefined);\n            removeAllDelegatedListeners($element.target);\n        }\n        $element.target = undefined; // Help GC\n        if ($element.type !== VirtualElementTypesEnum.Tag) {\n            return;\n        }\n    }\n    for (const $child of $element.children) {\n        unmountRealTree($child);\n    }\n}\nfunction insertBefore(parentEl, node, nextSibling) {\n    if (nextSibling) {\n        parentEl.insertBefore(node, nextSibling);\n    }\n    else {\n        parentEl.appendChild(node);\n    }\n}\nfunction getNextSibling($current) {\n    if (isComponentElement($current) || isFragmentElement($current)) {\n        const lastChild = $current.children[$current.children.length - 1];\n        return getNextSibling(lastChild);\n    }\n    return $current.target.nextSibling || undefined;\n}\nfunction renderChildren($current, $new, currentEl, nextSibling, forceMoveToEnd = false) {\n    if (DEBUG) {\n        DEBUG_checkKeyUniqueness($new.children);\n    }\n    if (('props' in $new) && $new.props.teactFastList) {\n        renderFastListChildren($current, $new, currentEl);\n        return;\n    }\n    const currentChildren = $current.children;\n    const newChildren = $new.children;\n    const currentChildrenLength = currentChildren.length;\n    const newChildrenLength = newChildren.length;\n    const maxLength = Math.max(currentChildrenLength, newChildrenLength);\n    const fragment = newChildrenLength > currentChildrenLength ? document.createDocumentFragment() : undefined;\n    const lastCurrentChild = $current.children[currentChildrenLength - 1];\n    const fragmentNextSibling = fragment && (nextSibling || (lastCurrentChild ? getNextSibling(lastCurrentChild) : undefined));\n    for (let i = 0; i < maxLength; i++) {\n        const $renderedChild = renderWithVirtual(currentEl, currentChildren[i], newChildren[i], $new, i, i >= currentChildrenLength ? { fragment } : { nextSibling, forceMoveToEnd });\n        if ($renderedChild && $renderedChild !== newChildren[i]) {\n            newChildren.splice(i, 1, $renderedChild);\n        }\n    }\n    if (fragment) {\n        insertBefore(currentEl, fragment, fragmentNextSibling);\n    }\n}\n// This function allows to prepend/append a bunch of new DOM nodes to the top/bottom of preserved ones.\n// It also allows to selectively move particular preserved nodes within their DOM list.\nfunction renderFastListChildren($current, $new, currentEl) {\n    const currentChildren = $current.children;\n    const newChildren = $new.children;\n    const newKeys = new Set();\n    for (const $newChild of newChildren) {\n        const key = 'props' in $newChild ? $newChild.props.key : undefined;\n        if (DEBUG && isParentElement($newChild)) {\n            // eslint-disable-next-line no-null/no-null\n            if (key === undefined || key === null) {\n                // eslint-disable-next-line no-console\n                console.warn('Missing `key` in `teactFastList`');\n            }\n            if (isFragmentElement($newChild)) {\n                throw new Error('[Teact] Fragment can not be child of container with `teactFastList`');\n            }\n        }\n        newKeys.add(key);\n    }\n    // Build a collection of old children that also remain in the new list\n    let currentRemainingIndex = 0;\n    const remainingByKey = {};\n    for (let i = 0, l = currentChildren.length; i < l; i++) {\n        const $currentChild = currentChildren[i];\n        let key = 'props' in $currentChild ? $currentChild.props.key : undefined;\n        // eslint-disable-next-line no-null/no-null\n        const isKeyPresent = key !== undefined && key !== null;\n        // First we process removed children\n        if (isKeyPresent && !newKeys.has(key)) {\n            renderWithVirtual(currentEl, $currentChild, undefined, $new, -1);\n            continue;\n        }\n        else if (!isKeyPresent) {\n            const $newChild = newChildren[i];\n            const newChildKey = ($newChild && 'props' in $newChild) ? $newChild.props.key : undefined;\n            // If a non-key element remains at the same index we preserve it with a virtual `key`\n            if ($newChild && !newChildKey) {\n                key = `${INDEX_KEY_PREFIX}${i}`;\n                // Otherwise, we just remove it\n            }\n            else {\n                renderWithVirtual(currentEl, $currentChild, undefined, $new, -1);\n                continue;\n            }\n        }\n        // Then we build up info about remaining children\n        remainingByKey[key] = {\n            $element: $currentChild,\n            index: currentRemainingIndex++,\n            orderKey: 'props' in $currentChild ? $currentChild.props.teactOrderKey : undefined,\n        };\n    }\n    let fragmentIndex;\n    let fragmentSize;\n    let currentPreservedIndex = 0;\n    for (let i = 0, l = newChildren.length; i < l; i++) {\n        const $newChild = newChildren[i];\n        const key = 'props' in $newChild ? $newChild.props.key : `${INDEX_KEY_PREFIX}${i}`;\n        const currentChildInfo = remainingByKey[key];\n        if (!currentChildInfo) {\n            if (fragmentSize === undefined) {\n                fragmentIndex = i;\n                fragmentSize = 0;\n            }\n            fragmentSize++;\n            continue;\n        }\n        // This prepends new children to the top\n        if (fragmentSize) {\n            renderFragment(fragmentIndex, fragmentSize, currentEl, $new);\n            fragmentSize = undefined;\n            fragmentIndex = undefined;\n        }\n        // Now we check if a preserved node was moved within preserved list\n        const newOrderKey = 'props' in $newChild ? $newChild.props.teactOrderKey : undefined;\n        // That is indicated by a changed `teactOrderKey` value\n        const shouldMoveNode = (currentChildInfo.index !== currentPreservedIndex && (!newOrderKey || currentChildInfo.orderKey !== newOrderKey));\n        const isMovingDown = shouldMoveNode && currentPreservedIndex > currentChildInfo.index;\n        if (!shouldMoveNode || isMovingDown) {\n            currentPreservedIndex++;\n        }\n        const nextSibling = currentEl.childNodes[isMovingDown ? i + 1 : i];\n        const options = shouldMoveNode ? (nextSibling ? { nextSibling } : { forceMoveToEnd: true }) : undefined;\n        const $renderedChild = renderWithVirtual(currentEl, currentChildInfo.$element, $newChild, $new, i, options);\n        if ($renderedChild !== $newChild) {\n            newChildren.splice(i, 1, $renderedChild);\n        }\n    }\n    // This appends new children to the bottom\n    if (fragmentSize) {\n        renderFragment(fragmentIndex, fragmentSize, currentEl, $new);\n    }\n}\nfunction renderFragment(fragmentIndex, fragmentSize, parentEl, $parent) {\n    const nextSibling = parentEl.childNodes[fragmentIndex];\n    if (fragmentSize === 1) {\n        const $child = $parent.children[fragmentIndex];\n        const $renderedChild = renderWithVirtual(parentEl, undefined, $child, $parent, fragmentIndex, { nextSibling });\n        if ($renderedChild !== $child) {\n            $parent.children.splice(fragmentIndex, 1, $renderedChild);\n        }\n        return;\n    }\n    const fragment = document.createDocumentFragment();\n    for (let i = fragmentIndex; i < fragmentIndex + fragmentSize; i++) {\n        const $child = $parent.children[i];\n        const $renderedChild = renderWithVirtual(parentEl, undefined, $child, $parent, i, { fragment });\n        if ($renderedChild !== $child) {\n            $parent.children.splice(i, 1, $renderedChild);\n        }\n    }\n    insertBefore(parentEl, fragment, nextSibling);\n}\nfunction setElementRef($element, htmlElement) {\n    const { ref } = $element.props;\n    if (typeof ref === 'object') {\n        ref.current = htmlElement;\n    }\n    else if (typeof ref === 'function') {\n        ref(htmlElement);\n    }\n}\nfunction processControlled(tag, props) {\n    const isValueControlled = props.value !== undefined;\n    const isCheckedControlled = props.checked !== undefined;\n    const isControlled = (isValueControlled || isCheckedControlled) && CONTROLLABLE_TAGS.includes(tag.toUpperCase());\n    if (!isControlled) {\n        return;\n    }\n    const { value, checked, onInput, onChange, } = props;\n    props.onChange = undefined;\n    props.onInput = (e) => {\n        onInput?.(e);\n        onChange?.(e);\n        if (value !== undefined && value !== e.currentTarget.value) {\n            const { selectionStart, selectionEnd } = e.currentTarget;\n            const isCaretAtEnd = selectionStart === selectionEnd && selectionEnd === e.currentTarget.value.length;\n            e.currentTarget.value = value;\n            if (typeof selectionStart === 'number' && typeof selectionEnd === 'number') {\n                e.currentTarget.setSelectionRange(selectionStart, selectionEnd);\n                const selectionState = { selectionStart, selectionEnd, isCaretAtEnd };\n                // eslint-disable-next-line no-underscore-dangle\n                e.currentTarget.dataset.__teactSelectionState = JSON.stringify(selectionState);\n            }\n        }\n        if (checked !== undefined) {\n            e.currentTarget.checked = checked;\n        }\n    };\n}\nfunction processUncontrolledOnMount(element, props) {\n    if (!CONTROLLABLE_TAGS.includes(element.tagName)) {\n        return;\n    }\n    if (props.defaultValue) {\n        setAttribute(element, 'value', props.defaultValue);\n    }\n    if (props.defaultChecked) {\n        setAttribute(element, 'checked', props.defaultChecked);\n    }\n}\nfunction updateAttributes($current, $new, element) {\n    processControlled(element.tagName, $new.props);\n    const currentEntries = Object.entries($current.props);\n    const newEntries = Object.entries($new.props);\n    for (const [key, currentValue] of currentEntries) {\n        const newValue = $new.props[key];\n        if (currentValue !== undefined\n            && (newValue === undefined\n                || (currentValue !== newValue && key.startsWith('on')))) {\n            removeAttribute(element, key, currentValue);\n        }\n    }\n    for (const [key, newValue] of newEntries) {\n        const currentValue = $current.props[key];\n        if (newValue !== undefined && newValue !== currentValue) {\n            setAttribute(element, key, newValue);\n        }\n    }\n}\nfunction setAttribute(element, key, value) {\n    if (key === 'className') {\n        updateClassName(element, value);\n    }\n    else if (key === 'value') {\n        const inputEl = element;\n        if (inputEl.value !== value) {\n            inputEl.value = value;\n            // eslint-disable-next-line no-underscore-dangle\n            const selectionStateJson = inputEl.dataset.__teactSelectionState;\n            if (selectionStateJson) {\n                const { selectionStart, selectionEnd, isCaretAtEnd } = JSON.parse(selectionStateJson);\n                if (isCaretAtEnd) {\n                    const length = inputEl.value.length;\n                    inputEl.setSelectionRange(length, length);\n                }\n                else if (typeof selectionStart === 'number' && typeof selectionEnd === 'number') {\n                    inputEl.setSelectionRange(selectionStart, selectionEnd);\n                }\n            }\n        }\n    }\n    else if (key === 'style') {\n        updateStyle(element, value);\n    }\n    else if (key === 'dangerouslySetInnerHTML') {\n        // eslint-disable-next-line no-underscore-dangle\n        element.innerHTML = value.__html;\n    }\n    else if (key.startsWith('on')) {\n        addEventListener(element, key, value, key.endsWith('Capture'));\n    }\n    else if (key.startsWith('data-') || key.startsWith('aria-') || HTML_ATTRIBUTES.has(key)) {\n        element.setAttribute(key, value);\n    }\n    else if (!FILTERED_ATTRIBUTES.has(key)) {\n        element[MAPPED_ATTRIBUTES[key] || key] = value;\n    }\n}\nfunction removeAttribute(element, key, value) {\n    if (key === 'className') {\n        updateClassName(element, '');\n    }\n    else if (key === 'value') {\n        element.value = '';\n    }\n    else if (key === 'style') {\n        updateStyle(element, '');\n    }\n    else if (key === 'dangerouslySetInnerHTML') {\n        element.innerHTML = '';\n    }\n    else if (key.startsWith('on')) {\n        removeEventListener(element, key, value, key.endsWith('Capture'));\n    }\n    else if (!FILTERED_ATTRIBUTES.has(key)) {\n        element.removeAttribute(key);\n    }\n}\nfunction updateClassName(element, value) {\n    const extra = extraClasses.get(element);\n    if (!extra) {\n        element.className = value;\n        return;\n    }\n    const extraArray = Array.from(extra);\n    if (value) {\n        extraArray.push(value);\n    }\n    element.className = extraArray.join(' ');\n}\nfunction updateStyle(element, value) {\n    element.style.cssText = value;\n    const extraObject = extraStyles.get(element);\n    if (extraObject) {\n        applyExtraStyles(element);\n    }\n}\nexport function addExtraClass(element, className, forceSingle = false) {\n    if (!forceSingle) {\n        const classNames = className.split(' ');\n        if (classNames.length > 1) {\n            for (const cn of classNames) {\n                addExtraClass(element, cn, true);\n            }\n            return;\n        }\n    }\n    element.classList.add(className);\n    const classList = extraClasses.get(element);\n    if (classList) {\n        classList.add(className);\n    }\n    else {\n        extraClasses.set(element, new Set([className]));\n    }\n}\nexport function removeExtraClass(element, className, forceSingle = false) {\n    if (!forceSingle) {\n        const classNames = className.split(' ');\n        if (classNames.length > 1) {\n            for (const cn of classNames) {\n                removeExtraClass(element, cn, true);\n            }\n            return;\n        }\n    }\n    element.classList.remove(className);\n    const classList = extraClasses.get(element);\n    if (classList) {\n        classList.delete(className);\n        if (!classList.size) {\n            extraClasses.delete(element);\n        }\n    }\n}\nexport function toggleExtraClass(element, className, force, forceSingle = false) {\n    if (!forceSingle) {\n        const classNames = className.split(' ');\n        if (classNames.length > 1) {\n            for (const cn of classNames) {\n                toggleExtraClass(element, cn, force, true);\n            }\n            return;\n        }\n    }\n    element.classList.toggle(className, force);\n    if (element.classList.contains(className)) {\n        addExtraClass(element, className);\n    }\n    else {\n        removeExtraClass(element, className);\n    }\n}\nexport function setExtraStyles(element, styles) {\n    extraStyles.set(element, styles);\n    applyExtraStyles(element);\n}\nfunction applyExtraStyles(element) {\n    const standardStyles = Object.entries(extraStyles.get(element)).reduce((acc, [prop, value]) => {\n        if (prop.startsWith('--')) {\n            element.style.setProperty(prop, value);\n        }\n        else {\n            acc[prop] = value;\n        }\n        return acc;\n    }, {});\n    Object.assign(element.style, standardStyles);\n}\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction DEBUG_checkKeyUniqueness(children) {\n    const firstChild = children[0];\n    if (firstChild && 'props' in firstChild && firstChild.props.key !== undefined) {\n        const keys = children.reduce((acc, child) => {\n            if ('props' in child && child.props.key) {\n                acc.push(child.props.key);\n            }\n            return acc;\n        }, []);\n        if (keys.length !== unique(keys).length) {\n            // eslint-disable-next-line no-console\n            console.warn('[Teact] Duplicated keys:', keys.filter((e, i, a) => a.indexOf(e) !== i));\n            throw new Error('[Teact] Children keys are not unique');\n        }\n    }\n}\nconst TeactDOM = { render };\nexport default TeactDOM;\n","import * as teact from './teact';\nimport * as teactDom from './teact-dom';\nconst { default: teactDefault, ...Teact } = teact;\nObject.assign(Teact, teactDefault);\nconst { default: teactDomDefault, ...TeactDOM } = teactDom;\nObject.assign(TeactDOM, teactDomDefault);\nexport { Teact, TeactDOM };\n"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","DEBUG","DEBUG_MORE","throttleWith","schedulerFn","fn","args","waiting","_args","fastRafCallbacks","fastRafFallbackCallbacks","fastRafFallbackTimeout","KEYS_TO_IGNORE","Set","counters","renderCountersThrottled","ms","shouldRunFirst","interval","isPending","self","setInterval","clearInterval","undefined","throttle","loggerEl","document","createElement","style","cssText","body","appendChild","clearEl","innerText","addEventListener","setupOverlay","halfSecondAgo","Date","now","maxRenders","maxDuration","entries","reduce","acc","has","includes","innerHTML","filter","sort","a","b","lastUpdateAt","map","factor","Math","round","toString","padStart","join","incrementOverlayCounter","orderBy","collection","orderRule","mode","compareValues","currentOrderRule","isAsc","aValue","bValue","Array","isArray","mode1","mode2","orderRule1","orderRule2","isAsc1","isAsc2","handleErrorEvent","e","ErrorEvent","message","preventDefault","handleError","error","reason","err","console","window","SAFE_EXEC_ENABLED","safeExec","cb","rescue","always","SIGNAL_MARK","isSignal","Map","phase","setPhase","newPhase","pendingMeasureTasks","pendingMutationTasks","pendingForceReflowTasks","runUpdatePassOnRaf","throttledFn","callback","withTimeoutFallback","add","requestAnimationFrame","currentCallbacks","clearTimeout","forEach","setTimeout","currentTimeoutCallbacks","delete","fastRaf","currentMeasureTasks","task","Promise","resolve","then","currentMutationTasks","pendingForceReflowMutationTasks","mutationTask","push","VirtualElementTypesEnum","MountState","Fragment","DEBUG_RENDER_THRESHOLD","DEBUG_EFFECT_THRESHOLD","DEBUG_SILENT_RENDERS_FOR","renderingInstance","lastComponentId","isEmptyElement","$element","type","Empty","isTextElement","Text","isTagElement","Tag","isComponentElement","Component","isFragmentElement","isParentElement","source","props","children","buildChildren","buildFragmentElement","length","componentInstance","id","name","mountState","New","buildComponentElement","createComponentInstance","tag","buildTagElement","noEmpty","cleanChildren","i","isEmptyPlaceholder","slice","dropEmptyTail","newChildren","l","child","buildChildElement","String","DEBUG_components","TOTAL","renders","DEBUG_memos","DEBUG_MEMOS_CALLS_THRESHOLD","warn","values","avgRenderTime","state","Number","toFixed","calls","hitRate","instancesPendingUpdate","idsToExcludeFromUpdate","pendingEffects","pendingCleanups","pendingLayoutEffects","pendingLayoutCleanups","areImmediateEffectsCaptured","runImmediateEffects","captureImmediateEffects","instancesToUpdate","from","currentCleanups","currentEffects","prepareComponentForFrame","instance","Mounted","onUpdate","currentElement","renderComponent","forceUpdateComponent","runCapturedImmediateEffects","currentLayoutCleanups","currentLayoutEffects","newRenderedValue","DEBUG_startAt","hooks","cursor","effects","memos","refs","componentName","DEBUG_resolveComponentName","log","performance","duration","renderedValue","hasElementChanged","$old","$new","mountComponent","unmountComponent","effect","byCursor","cleanup","releaseSignals","Unmounted","hook","nextValue","useState","initial","debugKey","setter","newValue","useEffectBase","isLayout","dependencies","runEffectCleanup","runEffect","result","schedule","effectId","set","some","dependency","causedBy","res","prevValue","isFirstRun","cleanups","signal","subscribe","setupSignals","useEffect","useLayoutEffect","useMemo","resolver","debugHitRateKey","DEBUG_state","instanceKey","misses","msg","currentProps","newProps","currentKeys","keys","logUnequalProps","useCallback","newCallback","useRef","current","memo","TeactMemoWrapper","DEBUG_contentComponentName","NON_BUBBLEABLE_EVENTS","documentEventCounters","delegationRegistryByEventType","delegatedEventTypesByElement","resolveEventType","propName","element","eventType","replace","toLowerCase","tagName","canUseEventDelegation","realEventType","asCapture","removeDelegatedListener","removeEventListener","handleEvent","realEvent","events","furtherCallsPrevented","target","stopPropagation","event","Proxy","p","Reflect","handler","parentNode","documentListenersCount","delegatedHandlersCount1","counter","delegationRegistriesCount","delegatedHandlersCount2","delegationRegistry","size","delegationElementsCount","delegatedEventTypesCount","eventTypes","FILTERED_ATTRIBUTES","HTML_ATTRIBUTES","CONTROLLABLE_TAGS","MAPPED_ATTRIBUTES","autoPlay","autoComplete","INDEX_KEY_PREFIX","headsByElement","WeakMap","extraClasses","extraStyles","renderWithVirtual","parentEl","$current","$parent","index","options","skipComponentUpdate","fragment","nextSibling","isCurrentComponent","isNewComponent","$newAsReal","isCurrentFragment","isNewFragment","updateComponent","setupComponentUpdateListener","newTarget","Error","initComponent","mountChildren","textContent","firstChild","node","createNode","insertBefore","setElementRef","remount","getNextSibling","nodeValue","renderChildren","forceMoveToEnd","$currentAsReal","currentTarget","$newAsTag","processControlled","currentEntries","newEntries","currentValue","startsWith","removeAttribute","setAttribute","updateAttributes","$firstChild","$child","$renderedChild","splice","createTextNode","defaultValue","defaultChecked","processUncontrolledOnMount","componentNextSibling","isComponent","isFragment","unmountChildren","replaceChild","removeChild","unmountRealTree","removeAllDelegatedListeners","currentEl","array","indexOf","DEBUG_checkKeyUniqueness","teactFastList","currentChildren","newKeys","$newChild","currentRemainingIndex","remainingByKey","$currentChild","isKeyPresent","newChildKey","orderKey","teactOrderKey","fragmentIndex","fragmentSize","currentPreservedIndex","currentChildInfo","renderFragment","newOrderKey","shouldMoveNode","isMovingDown","childNodes","renderFastListChildren","currentChildrenLength","newChildrenLength","maxLength","max","createDocumentFragment","lastCurrentChild","fragmentNextSibling","htmlElement","ref","isValueControlled","isCheckedControlled","checked","toUpperCase","onInput","onChange","selectionStart","selectionEnd","isCaretAtEnd","setSelectionRange","selectionState","dataset","__teactSelectionState","JSON","stringify","updateClassName","inputEl","selectionStateJson","parse","updateStyle","__html","resolveDelegationRegistry","existing","newSet","resolveDelegatedEventTypes","addDelegatedListener","endsWith","extra","className","extraArray","applyExtraStyles","addExtraClass","forceSingle","classNames","split","cn","classList","removeExtraClass","remove","toggleExtraClass","force","toggle","contains","setExtraStyles","styles","standardStyles","setProperty","assign","render","$head","default","teactDefault","Teact","teactDomDefault"],"sourceRoot":""}
{"version":3,"file":"teact.js","mappings":"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","sources":["webpack://teact/webpack/universalModuleDefinition","webpack://teact/webpack/bootstrap","webpack://teact/webpack/runtime/define property getters","webpack://teact/webpack/runtime/hasOwnProperty shorthand","webpack://teact/webpack/runtime/make namespace object","webpack://teact/./src/config.ts","webpack://teact/./src/util/schedulers.ts","webpack://teact/./src/util/debugOverlay.ts","webpack://teact/./src/util/iteratees.ts","webpack://teact/./src/util/handleError.ts","webpack://teact/./src/util/safeExec.ts","webpack://teact/./src/util/callbacks.ts","webpack://teact/./src/util/signals.ts","webpack://teact/./src/lib/fasterdom/stricterdom.ts","webpack://teact/./src/lib/fasterdom/fasterdom.ts","webpack://teact/./src/teact/teact.ts","webpack://teact/./src/util/arePropsShallowEqual.ts","webpack://teact/./src/teact/dom-events.ts","webpack://teact/./src/teact/teact-dom.ts","webpack://teact/./src/teact/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"teact\"] = factory();\n\telse\n\t\troot[\"teact\"] = factory();\n})(this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const DEBUG = false;\nexport const DEBUG_MORE = false;\n","export function throttle(fn, ms, shouldRunFirst = true) {\n    let interval;\n    let isPending;\n    let args;\n    return (..._args) => {\n        isPending = true;\n        args = _args;\n        if (!interval) {\n            if (shouldRunFirst) {\n                isPending = false;\n                fn(...args);\n            }\n            // eslint-disable-next-line no-restricted-globals\n            interval = self.setInterval(() => {\n                if (!isPending) {\n                    // eslint-disable-next-line no-restricted-globals\n                    self.clearInterval(interval);\n                    interval = undefined;\n                    return;\n                }\n                isPending = false;\n                fn(...args);\n            }, ms);\n        }\n    };\n}\nexport function throttleWithTickEnd(fn) {\n    return throttleWith(onTickEnd, fn);\n}\nexport function throttleWith(schedulerFn, fn) {\n    let waiting = false;\n    let args;\n    return (..._args) => {\n        args = _args;\n        if (!waiting) {\n            waiting = true;\n            schedulerFn(() => {\n                waiting = false;\n                fn(...args);\n            });\n        }\n    };\n}\nexport function onIdle(cb, timeout) {\n    // eslint-disable-next-line no-restricted-globals\n    if (self.requestIdleCallback) {\n        // eslint-disable-next-line no-restricted-globals\n        self.requestIdleCallback(cb, { timeout });\n    }\n    else {\n        onTickEnd(cb);\n    }\n}\nconst FAST_RAF_TIMEOUT_FALLBACK_MS = 300;\nlet fastRafCallbacks;\nlet fastRafFallbackCallbacks;\nlet fastRafFallbackTimeout;\n// May result in an immediate execution if called from another RAF callback which was scheduled\n// (and therefore is executed) earlier than RAF callback scheduled by `fastRaf`\nexport function fastRaf(callback, withTimeoutFallback = false) {\n    if (!fastRafCallbacks) {\n        fastRafCallbacks = new Set([callback]);\n        requestAnimationFrame(() => {\n            const currentCallbacks = fastRafCallbacks;\n            fastRafCallbacks = undefined;\n            fastRafFallbackCallbacks = undefined;\n            if (fastRafFallbackTimeout) {\n                clearTimeout(fastRafFallbackTimeout);\n                fastRafFallbackTimeout = undefined;\n            }\n            currentCallbacks.forEach((cb) => cb());\n        });\n    }\n    else {\n        fastRafCallbacks.add(callback);\n    }\n    if (withTimeoutFallback) {\n        if (!fastRafFallbackCallbacks) {\n            fastRafFallbackCallbacks = new Set([callback]);\n        }\n        else {\n            fastRafFallbackCallbacks.add(callback);\n        }\n        if (!fastRafFallbackTimeout) {\n            fastRafFallbackTimeout = window.setTimeout(() => {\n                const currentTimeoutCallbacks = fastRafFallbackCallbacks;\n                if (fastRafCallbacks) {\n                    currentTimeoutCallbacks.forEach(fastRafCallbacks.delete, fastRafCallbacks);\n                }\n                fastRafFallbackCallbacks = undefined;\n                if (fastRafFallbackTimeout) {\n                    clearTimeout(fastRafFallbackTimeout);\n                    fastRafFallbackTimeout = undefined;\n                }\n                currentTimeoutCallbacks.forEach((cb) => cb());\n            }, FAST_RAF_TIMEOUT_FALLBACK_MS);\n        }\n    }\n}\nlet onTickEndCallbacks;\nexport function onTickEnd(callback) {\n    if (!onTickEndCallbacks) {\n        onTickEndCallbacks = [callback];\n        Promise.resolve().then(() => {\n            const currentCallbacks = onTickEndCallbacks;\n            onTickEndCallbacks = undefined;\n            currentCallbacks.forEach((cb) => cb());\n        });\n    }\n    else {\n        onTickEndCallbacks.push(callback);\n    }\n}\nlet beforeUnloadCallbacks;\nexport function onBeforeUnload(callback, isLast = false) {\n    if (!beforeUnloadCallbacks) {\n        beforeUnloadCallbacks = [];\n        // eslint-disable-next-line no-restricted-globals\n        self.addEventListener('beforeunload', () => {\n            beforeUnloadCallbacks.forEach((cb) => cb());\n        });\n    }\n    if (isLast) {\n        beforeUnloadCallbacks.push(callback);\n    }\n    else {\n        beforeUnloadCallbacks.unshift(callback);\n    }\n    return () => {\n        beforeUnloadCallbacks = beforeUnloadCallbacks.filter((cb) => cb !== callback);\n    };\n}\n","import { throttle } from './schedulers';\nconst KEYS_TO_IGNORE = new Set([\n    'TeactMemoWrapper renders',\n    'TeactNContainer renders',\n    'Button renders',\n]);\nconst MIN_RENDERS_TO_SHOW = 5;\nconst MIN_DURATION_TO_SHOW = 2;\nconst BG_GREEN = ' style=\"background: lightgreen\"';\nlet counters = {};\nconst renderCountersThrottled = throttle(renderCounters, 500, false);\nlet loggerEl;\nexport function debugToOverlay(text) {\n    if (!loggerEl) {\n        setupOverlay();\n    }\n    const date = new Date();\n    const dateFormatted = `${date.toLocaleTimeString()}.${date.getMilliseconds()}`;\n    const wasAtBottom = loggerEl.scrollTop + 10 >= loggerEl.scrollHeight - loggerEl.offsetHeight;\n    loggerEl.innerHTML += `${dateFormatted}: ${text}<br/>`;\n    if (wasAtBottom) {\n        loggerEl.scrollTop = loggerEl.scrollHeight;\n    }\n}\nexport function incrementOverlayCounter(key, value = 1) {\n    const now = Date.now();\n    if (!counters[key]) {\n        counters[key] = { value, lastUpdateAt: now };\n    }\n    else {\n        counters[key].value += value;\n        counters[key].lastUpdateAt = now;\n    }\n    renderCountersThrottled();\n}\nexport function renderCounters() {\n    if (!loggerEl) {\n        setupOverlay();\n    }\n    const halfSecondAgo = Date.now() - 500;\n    const [maxRenders, maxDuration] = Object.entries(counters).reduce((acc, [key, { value }]) => {\n        if (KEYS_TO_IGNORE.has(key)) {\n            return acc;\n        }\n        if (key.includes('renders') && value > acc[0]) {\n            acc[0] = value;\n        }\n        if (key.includes('duration') && value > acc[1]) {\n            acc[1] = value;\n        }\n        return acc;\n    }, [0, 0]);\n    loggerEl.innerHTML = Object\n        .entries(counters)\n        .filter(([key, { value }]) => ((!KEYS_TO_IGNORE.has(key)) && ((key.includes('renders') && value > MIN_RENDERS_TO_SHOW)\n        || (key.includes('duration') && value > MIN_DURATION_TO_SHOW))))\n        .sort((a, b) => (b[1].lastUpdateAt - a[1].lastUpdateAt))\n        .map(([key, { value, lastUpdateAt }]) => ([\n        `<div style=\"background: #ff0000${factorToHex(value / (key.includes('renders') ? maxRenders : maxDuration))}\">`,\n        `  <span${lastUpdateAt > halfSecondAgo ? BG_GREEN : ''}>${key}: ${Math.round(value)}</span>`,\n        '</div>',\n    ].join('\\n')))\n        .join('\\n');\n}\nfunction setupOverlay() {\n    loggerEl = document.createElement('div');\n    loggerEl.style.cssText = 'position: absolute; left: 0; bottom: 25px; z-index: 9998; width: 260px; height: 200px;'\n        + ' border: 1px solid #555; background: rgba(255, 255, 255, 0.9); overflow: auto; font-size: 10px;';\n    document.body.appendChild(loggerEl);\n    const clearEl = document.createElement('a');\n    clearEl.style.cssText = 'position: absolute; left: 222px; bottom: 198px; z-index: 9999; font-size: 20px; '\n        + 'cursor: pointer;';\n    clearEl.innerText = '🔄';\n    clearEl.addEventListener('click', () => {\n        counters = {};\n        renderCountersThrottled();\n    });\n    document.body.appendChild(clearEl);\n}\nfunction factorToHex(factor) {\n    return Math.round(255 * factor).toString(16).padStart(2, '0');\n}\n","export function orderBy(collection, orderRule, mode = 'asc') {\n    function compareValues(a, b, currentOrderRule, isAsc) {\n        const aValue = (typeof currentOrderRule === 'function' ? currentOrderRule(a) : a[currentOrderRule]) || 0;\n        const bValue = (typeof currentOrderRule === 'function' ? currentOrderRule(b) : b[currentOrderRule]) || 0;\n        return isAsc ? aValue - bValue : bValue - aValue;\n    }\n    if (Array.isArray(orderRule)) {\n        const [mode1, mode2] = Array.isArray(mode) ? mode : [mode, mode];\n        const [orderRule1, orderRule2] = orderRule;\n        const isAsc1 = mode1 === 'asc';\n        const isAsc2 = mode2 === 'asc';\n        return collection.sort((a, b) => {\n            return compareValues(a, b, orderRule1, isAsc1) || compareValues(a, b, orderRule2, isAsc2);\n        });\n    }\n    const isAsc = mode === 'asc';\n    return collection.sort((a, b) => {\n        return compareValues(a, b, orderRule, isAsc);\n    });\n}\nexport function unique(array) {\n    return Array.from(new Set(array));\n}\n","window.addEventListener('error', handleErrorEvent);\nwindow.addEventListener('unhandledrejection', handleErrorEvent);\nfunction handleErrorEvent(e) {\n    // https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded\n    if (e instanceof ErrorEvent && e.message === 'ResizeObserver loop limit exceeded') {\n        return;\n    }\n    e.preventDefault();\n    handleError(e instanceof ErrorEvent ? (e.error || e.message) : e.reason);\n}\nexport function handleError(err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n}\n","import { DEBUG_MORE } from '../config';\nimport { handleError } from './handleError';\nconst SAFE_EXEC_ENABLED = !DEBUG_MORE;\nexport default function safeExec(cb, rescue, always) {\n    if (!SAFE_EXEC_ENABLED) {\n        return cb();\n    }\n    try {\n        return cb();\n    }\n    catch (err) {\n        rescue?.(err);\n        handleError(err);\n        return undefined;\n    }\n    finally {\n        always?.();\n    }\n}\n","export function createCallbackManager() {\n    const callbacks = new Set();\n    function addCallback(cb) {\n        callbacks.add(cb);\n        return () => {\n            removeCallback(cb);\n        };\n    }\n    function removeCallback(cb) {\n        callbacks.delete(cb);\n    }\n    function runCallbacks(...args) {\n        callbacks.forEach((callback) => {\n            callback(...args);\n        });\n    }\n    function hasCallbacks() {\n        return Boolean(callbacks.size);\n    }\n    return {\n        runCallbacks,\n        addCallback,\n        removeCallback,\n        hasCallbacks,\n    };\n}\n","import { createCallbackManager } from './callbacks';\nconst SIGNAL_MARK = Symbol('SIGNAL_MARK');\nexport function isSignal(obj) {\n    return typeof obj === 'function' && SIGNAL_MARK in obj;\n}\n// A shorthand to unsubscribe effect from all signals\nconst unsubscribesByEffect = new Map();\nlet currentEffect;\nexport function createSignal(defaultValue) {\n    const state = {\n        value: defaultValue,\n        effects: createCallbackManager(),\n    };\n    function subscribe(effect) {\n        const unsubscribe = state.effects.addCallback(effect);\n        if (!unsubscribesByEffect.has(effect)) {\n            unsubscribesByEffect.set(effect, new Set([unsubscribe]));\n        }\n        else {\n            unsubscribesByEffect.get(effect).add(unsubscribe);\n        }\n        return () => {\n            unsubscribe();\n            const unsubscribes = unsubscribesByEffect.get(effect);\n            unsubscribes.delete(unsubscribe);\n            if (!unsubscribes.size) {\n                unsubscribesByEffect.delete(effect);\n            }\n        };\n    }\n    function getter() {\n        if (currentEffect) {\n            subscribe(currentEffect);\n        }\n        return state.value;\n    }\n    function setter(newValue) {\n        if (state.value === newValue) {\n            return;\n        }\n        state.value = newValue;\n        state.effects.runCallbacks();\n    }\n    const signal = Object.assign(getter, {\n        [SIGNAL_MARK]: SIGNAL_MARK,\n        subscribe,\n    });\n    return [signal, setter];\n}\nexport function cleanupEffect(effect) {\n    unsubscribesByEffect.get(effect)?.forEach((unsubscribe) => {\n        unsubscribe();\n    });\n    unsubscribesByEffect.delete(effect);\n}\n","import LAYOUT_CAUSES from './layoutCauses';\n// eslint-disable-next-line no-console\nconst DEFAULT_ERROR_HANDLER = console.error;\nlet onError = DEFAULT_ERROR_HANDLER;\nconst nativeMethods = new Map();\nlet phase = 'measure';\nlet isStrict = false;\nlet observer;\nexport function setPhase(newPhase) {\n    phase = newPhase;\n}\nexport function getPhase() {\n    return phase;\n}\nexport function enableStrict() {\n    if (isStrict)\n        return;\n    isStrict = true;\n    setupLayoutDetectors();\n    setupMutationObserver();\n}\nexport function disableStrict() {\n    if (!isStrict)\n        return;\n    clearMutationObserver();\n    clearLayoutDetectors();\n    isStrict = false;\n}\nexport function forceMeasure(cb) {\n    if (phase !== 'mutate') {\n        throw new Error('The current phase is \\'measure\\'');\n    }\n    phase = 'measure';\n    const result = cb();\n    phase = 'mutate';\n    return result;\n}\nexport function setHandler(handler) {\n    onError = handler || DEFAULT_ERROR_HANDLER;\n}\nfunction setupLayoutDetectors() {\n    Object.entries(LAYOUT_CAUSES).forEach(([name, causes]) => {\n        const entity = window[name];\n        if (!entity)\n            return;\n        const prototype = typeof entity === 'object' ? entity : entity.prototype;\n        if ('props' in causes) {\n            causes.props.forEach((prop) => {\n                const nativeGetter = Object.getOwnPropertyDescriptor(prototype, prop)?.get;\n                if (!nativeGetter) {\n                    return;\n                }\n                nativeMethods.set(`${name}#${prop}`, nativeGetter);\n                Object.defineProperty(prototype, prop, {\n                    get() {\n                        onMeasure(prop);\n                        return nativeGetter.call(this);\n                    },\n                });\n            });\n        }\n        if ('methods' in causes) {\n            causes.methods.forEach((method) => {\n                const nativeMethod = prototype[method];\n                nativeMethods.set(`${name}#${method}`, nativeMethod);\n                // eslint-disable-next-line func-names\n                prototype[method] = function (...args) {\n                    onMeasure(method);\n                    return nativeMethod.apply(this, args);\n                };\n            });\n        }\n    });\n}\nfunction clearLayoutDetectors() {\n    Object.entries(LAYOUT_CAUSES).forEach(([name, causes]) => {\n        const entity = window[name];\n        if (!entity)\n            return;\n        const prototype = typeof entity === 'object' ? entity : entity.prototype;\n        if ('props' in causes) {\n            causes.props.forEach((prop) => {\n                const nativeGetter = nativeMethods.get(`${name}#${prop}`);\n                if (!nativeGetter) {\n                    return;\n                }\n                Object.defineProperty(prototype, prop, { get: nativeGetter });\n            });\n        }\n        if ('methods' in causes) {\n            causes.methods.forEach((method) => {\n                prototype[method] = nativeMethods.get(`${name}#${method}`);\n            });\n        }\n    });\n    nativeMethods.clear();\n}\nfunction setupMutationObserver() {\n    observer = new MutationObserver((mutations) => {\n        if (phase !== 'mutate') {\n            mutations.forEach(({ target, type, attributeName }) => {\n                if (!document.contains(target)) {\n                    return;\n                }\n                if (type === 'childList' && target instanceof HTMLElement && target.contentEditable) {\n                    return;\n                }\n                if (attributeName?.startsWith('data-')) {\n                    return;\n                }\n                // eslint-disable-next-line no-console\n                onError(new Error(`Unexpected mutation detected: \\`${type === 'attributes' ? attributeName : type}\\``));\n            });\n        }\n    });\n    observer.observe(document.body, {\n        childList: true,\n        attributes: true,\n        subtree: true,\n        characterData: false,\n    });\n}\nfunction clearMutationObserver() {\n    observer?.disconnect();\n    observer = undefined;\n}\nfunction onMeasure(propName) {\n    if (phase !== 'measure') {\n        onError(new Error(`Unexpected measurement detected: \\`${propName}\\``));\n    }\n}\n","import { fastRaf, throttleWith } from '../../util/schedulers';\nimport safeExec from '../../util/safeExec';\nimport { setPhase } from './stricterdom';\nlet pendingMeasureTasks = [];\nlet pendingMutationTasks = [];\nlet pendingForceReflowTasks = [];\nconst runUpdatePassOnRaf = throttleWithRafFallback(() => {\n    const currentMeasureTasks = pendingMeasureTasks;\n    pendingMeasureTasks = [];\n    currentMeasureTasks.forEach((task) => {\n        safeExec(task);\n    });\n    // We use promises to provide correct order for Mutation Observer callback microtasks\n    Promise.resolve()\n        .then(() => {\n        setPhase('mutate');\n        const currentMutationTasks = pendingMutationTasks;\n        pendingMutationTasks = [];\n        currentMutationTasks.forEach((task) => {\n            safeExec(task);\n        });\n    })\n        .then(() => {\n        setPhase('measure');\n        const pendingForceReflowMutationTasks = [];\n        // Will include tasks created during the loop\n        for (const task of pendingForceReflowTasks) {\n            safeExec(() => {\n                const mutationTask = task();\n                if (mutationTask) {\n                    pendingForceReflowMutationTasks.push(mutationTask);\n                }\n            });\n        }\n        pendingForceReflowTasks = [];\n        return pendingForceReflowMutationTasks;\n    })\n        .then((pendingForceReflowMutationTasks) => {\n        setPhase('mutate');\n        // Will include tasks created during the loop\n        for (const task of pendingForceReflowMutationTasks) {\n            safeExec(task);\n        }\n    })\n        .then(() => {\n        setPhase('measure');\n    });\n});\nexport function requestMeasure(cb) {\n    pendingMeasureTasks.push(cb);\n    runUpdatePassOnRaf();\n}\nexport function requestMutation(cb) {\n    pendingMutationTasks.push(cb);\n    runUpdatePassOnRaf();\n}\nexport function requestNextMutation(cb) {\n    requestMeasure(() => {\n        requestMutation(cb);\n    });\n}\nexport function requestForcedReflow(cb) {\n    pendingForceReflowTasks.push(cb);\n    runUpdatePassOnRaf();\n}\nfunction throttleWithRafFallback(fn) {\n    return throttleWith((throttledFn) => {\n        fastRaf(throttledFn, true);\n    }, fn);\n}\nexport * from './stricterdom';\n","import { DEBUG, DEBUG_MORE } from '../config';\nimport { logUnequalProps } from '../util/arePropsShallowEqual';\nimport { incrementOverlayCounter } from '../util/debugOverlay';\nimport { orderBy } from '../util/iteratees';\nimport safeExec from '../util/safeExec';\nimport { throttleWith } from '../util/schedulers';\nimport { createSignal, isSignal } from '../util/signals';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nexport var VirtualType;\n(function (VirtualType) {\n    VirtualType[VirtualType[\"Empty\"] = 0] = \"Empty\";\n    VirtualType[VirtualType[\"Text\"] = 1] = \"Text\";\n    VirtualType[VirtualType[\"Tag\"] = 2] = \"Tag\";\n    VirtualType[VirtualType[\"Component\"] = 3] = \"Component\";\n    VirtualType[VirtualType[\"Fragment\"] = 4] = \"Fragment\";\n})(VirtualType || (VirtualType = {}));\nexport var MountState;\n(function (MountState) {\n    MountState[MountState[\"New\"] = 0] = \"New\";\n    MountState[MountState[\"Mounted\"] = 1] = \"Mounted\";\n    MountState[MountState[\"Unmounted\"] = 2] = \"Unmounted\";\n})(MountState || (MountState = {}));\nconst Fragment = Symbol('Fragment');\nconst DEBUG_RENDER_THRESHOLD = 7;\nconst DEBUG_EFFECT_THRESHOLD = 7;\nconst DEBUG_SILENT_RENDERS_FOR = new Set(['TeactMemoWrapper', 'TeactNContainer', 'Button', 'ListItem', 'MenuItem']);\nlet contextCounter = 0;\nlet lastComponentId = 0;\nlet renderingInstance;\nexport function isParentElement($element) {\n    return ($element.type === VirtualType.Tag\n        || $element.type === VirtualType.Component\n        || $element.type === VirtualType.Fragment);\n}\nfunction createElement(source, props, ...children) {\n    if (source === Fragment) {\n        return buildFragmentElement(children);\n    }\n    else if (typeof source === 'function') {\n        return createComponentInstance(source, props || {}, children);\n    }\n    else {\n        return buildTagElement(source, props || {}, children);\n    }\n}\nfunction buildFragmentElement(children) {\n    return {\n        type: VirtualType.Fragment,\n        children: buildChildren(children, true),\n    };\n}\nfunction createComponentInstance(Component, props, children) {\n    if (children?.length) {\n        props.children = children.length === 1 ? children[0] : children;\n    }\n    const componentInstance = {\n        id: -1,\n        $element: undefined,\n        Component,\n        name: Component.name,\n        props,\n        mountState: MountState.New,\n    };\n    componentInstance.$element = buildComponentElement(componentInstance);\n    return componentInstance.$element;\n}\nfunction buildComponentElement(componentInstance, children) {\n    return {\n        type: VirtualType.Component,\n        componentInstance,\n        props: componentInstance.props,\n        children: children ? buildChildren(children, true) : [],\n    };\n}\nfunction buildTagElement(tag, props, children) {\n    return {\n        type: VirtualType.Tag,\n        tag,\n        props,\n        children: buildChildren(children),\n    };\n}\nfunction buildChildren(children, noEmpty = false) {\n    const cleanChildren = dropEmptyTail(children, noEmpty);\n    const newChildren = [];\n    for (let i = 0, l = cleanChildren.length; i < l; i++) {\n        const child = cleanChildren[i];\n        if (Array.isArray(child)) {\n            newChildren.push(...buildChildren(child, noEmpty));\n        }\n        else {\n            newChildren.push(buildChildElement(child));\n        }\n    }\n    return newChildren;\n}\n// We only need placeholders in the middle of collection (to ensure other elements order).\nfunction dropEmptyTail(children, noEmpty = false) {\n    let i = children.length - 1;\n    for (; i >= 0; i--) {\n        if (!isEmptyPlaceholder(children[i])) {\n            break;\n        }\n    }\n    if (i === children.length - 1) {\n        return children;\n    }\n    if (i === -1 && noEmpty) {\n        return children.slice(0, 1);\n    }\n    return children.slice(0, i + 1);\n}\nfunction isEmptyPlaceholder(child) {\n    return !child && child !== 0;\n}\nfunction buildChildElement(child) {\n    if (isEmptyPlaceholder(child)) {\n        return { type: VirtualType.Empty };\n    }\n    else if (isParentElement(child)) {\n        return child;\n    }\n    else {\n        return {\n            type: VirtualType.Text,\n            value: String(child),\n        };\n    }\n}\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst DEBUG_components = { TOTAL: { name: 'TOTAL', renders: 0 } };\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst DEBUG_memos = {};\nconst DEBUG_MEMOS_CALLS_THRESHOLD = 20;\ndocument.addEventListener('dblclick', () => {\n    // eslint-disable-next-line no-console\n    console.warn('COMPONENTS', orderBy(Object\n        .values(DEBUG_components)\n        .map(({ avgRenderTime, ...state }) => {\n        return { ...state, ...(avgRenderTime !== undefined && { avgRenderTime: Number(avgRenderTime.toFixed(2)) }) };\n    }), 'renders', 'desc'));\n    // eslint-disable-next-line no-console\n    console.warn('MEMOS', orderBy(Object\n        .values(DEBUG_memos)\n        .filter(({ calls }) => calls >= DEBUG_MEMOS_CALLS_THRESHOLD)\n        .map((state) => ({ ...state, hitRate: Number(state.hitRate.toFixed(2)) })), 'hitRate', 'asc'));\n});\nlet instancesPendingUpdate = new Set();\nlet idsToExcludeFromUpdate = new Set();\nlet pendingEffects = new Map();\nlet pendingCleanups = new Map();\nlet pendingLayoutEffects = new Map();\nlet pendingLayoutCleanups = new Map();\nlet areImmediateEffectsCaptured = false;\n/*\n  Order:\n  - component effect cleanups\n  - component effects\n  - measure tasks\n  - mutation tasks\n  - component updates\n  - component layout effect cleanups\n  - component layout effects\n  - forced layout measure tasks\n  - forced layout mutation tasks\n */\nconst runUpdatePassOnRaf = throttleWith(requestMeasure, () => {\n    const runImmediateEffects = captureImmediateEffects();\n    idsToExcludeFromUpdate = new Set();\n    const instancesToUpdate = Array\n        .from(instancesPendingUpdate)\n        .sort((a, b) => a.id - b.id);\n    instancesPendingUpdate = new Set();\n    const currentCleanups = pendingCleanups;\n    pendingCleanups = new Map();\n    currentCleanups.forEach((cb) => cb());\n    const currentEffects = pendingEffects;\n    pendingEffects = new Map();\n    currentEffects.forEach((cb) => cb());\n    requestMutation(() => {\n        instancesToUpdate.forEach(prepareComponentForFrame);\n        instancesToUpdate.forEach((instance) => {\n            if (idsToExcludeFromUpdate.has(instance.id)) {\n                return;\n            }\n            forceUpdateComponent(instance);\n        });\n        runImmediateEffects?.();\n    });\n});\nexport function captureImmediateEffects() {\n    if (areImmediateEffectsCaptured) {\n        return undefined;\n    }\n    areImmediateEffectsCaptured = true;\n    return runCapturedImmediateEffects;\n}\nfunction runCapturedImmediateEffects() {\n    const currentLayoutCleanups = pendingLayoutCleanups;\n    pendingLayoutCleanups = new Map();\n    currentLayoutCleanups.forEach((cb) => cb());\n    const currentLayoutEffects = pendingLayoutEffects;\n    pendingLayoutEffects = new Map();\n    currentLayoutEffects.forEach((cb) => cb());\n    areImmediateEffectsCaptured = false;\n}\nexport function renderComponent(componentInstance) {\n    idsToExcludeFromUpdate.add(componentInstance.id);\n    const { Component, props } = componentInstance;\n    let newRenderedValue;\n    safeExec(() => {\n        renderingInstance = componentInstance;\n        if (componentInstance.hooks) {\n            if (componentInstance.hooks.state) {\n                componentInstance.hooks.state.cursor = 0;\n            }\n            if (componentInstance.hooks.effects) {\n                componentInstance.hooks.effects.cursor = 0;\n            }\n            if (componentInstance.hooks.memos) {\n                componentInstance.hooks.memos.cursor = 0;\n            }\n            if (componentInstance.hooks.refs) {\n                componentInstance.hooks.refs.cursor = 0;\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        let DEBUG_startAt;\n        if (DEBUG) {\n            const componentName = DEBUG_resolveComponentName(Component);\n            if (!DEBUG_components[componentName]) {\n                DEBUG_components[componentName] = {\n                    name: componentName,\n                    renders: 0,\n                    avgRenderTime: 0,\n                };\n            }\n            if (DEBUG_MORE) {\n                if (!DEBUG_SILENT_RENDERS_FOR.has(componentName)) {\n                    // eslint-disable-next-line no-console\n                    console.log(`[Teact] Render ${componentName}`);\n                }\n            }\n            DEBUG_startAt = performance.now();\n        }\n        newRenderedValue = Component(props);\n        if (DEBUG) {\n            const duration = performance.now() - DEBUG_startAt;\n            const componentName = DEBUG_resolveComponentName(Component);\n            if (duration > DEBUG_RENDER_THRESHOLD) {\n                // eslint-disable-next-line no-console\n                console.warn(`[Teact] Slow component render: ${componentName}, ${Math.round(duration)} ms`);\n            }\n            const { renders, avgRenderTime } = DEBUG_components[componentName];\n            DEBUG_components[componentName].avgRenderTime = (avgRenderTime * renders + duration) / (renders + 1);\n            DEBUG_components[componentName].renders++;\n            DEBUG_components.TOTAL.renders++;\n            if (DEBUG_MORE) {\n                incrementOverlayCounter(`${componentName} renders`);\n                incrementOverlayCounter(`${componentName} duration`, duration);\n            }\n        }\n    }, () => {\n        // eslint-disable-next-line no-console\n        console.error(`[Teact] Error while rendering component ${componentInstance.name}`);\n        newRenderedValue = componentInstance.renderedValue;\n    });\n    if (componentInstance.mountState === MountState.Mounted && newRenderedValue === componentInstance.renderedValue) {\n        return componentInstance.$element;\n    }\n    componentInstance.renderedValue = newRenderedValue;\n    const children = Array.isArray(newRenderedValue) ? newRenderedValue : [newRenderedValue];\n    if (componentInstance.mountState === MountState.New) {\n        componentInstance.$element.children = buildChildren(children, true);\n    }\n    else {\n        componentInstance.$element = buildComponentElement(componentInstance, children);\n    }\n    return componentInstance.$element;\n}\nexport function hasElementChanged($old, $new) {\n    if (typeof $old !== typeof $new) {\n        return true;\n    }\n    else if ($old.type !== $new.type) {\n        return true;\n    }\n    else if ($old.type === VirtualType.Text && $new.type === VirtualType.Text) {\n        return $old.value !== $new.value;\n    }\n    else if ($old.type === VirtualType.Tag && $new.type === VirtualType.Tag) {\n        return ($old.tag !== $new.tag) || ($old.props.key !== $new.props.key);\n    }\n    else if ($old.type === VirtualType.Component && $new.type === VirtualType.Component) {\n        return ($old.componentInstance.Component !== $new.componentInstance.Component) || ($old.props.key !== $new.props.key);\n    }\n    return false;\n}\nexport function mountComponent(componentInstance) {\n    componentInstance.id = ++lastComponentId;\n    renderComponent(componentInstance);\n    componentInstance.mountState = MountState.Mounted;\n    return componentInstance.$element;\n}\nexport function unmountComponent(componentInstance) {\n    if (componentInstance.mountState !== MountState.Mounted) {\n        return;\n    }\n    idsToExcludeFromUpdate.add(componentInstance.id);\n    if (componentInstance.hooks?.effects) {\n        for (const effect of componentInstance.hooks.effects.byCursor) {\n            if (effect.cleanup) {\n                safeExec(effect.cleanup);\n            }\n            effect.cleanup = undefined;\n            effect.releaseSignals?.();\n        }\n    }\n    componentInstance.mountState = MountState.Unmounted;\n    helpGc(componentInstance);\n}\n// We need to remove all references to DOM objects. We also clean all other references, just in case\nfunction helpGc(componentInstance) {\n    const { effects, state, memos, refs, } = componentInstance.hooks || {};\n    if (effects) {\n        for (const hook of effects.byCursor) {\n            hook.schedule = undefined;\n            hook.cleanup = undefined;\n            hook.releaseSignals = undefined;\n            hook.dependencies = undefined;\n        }\n    }\n    if (state) {\n        for (const hook of state.byCursor) {\n            hook.value = undefined;\n            hook.nextValue = undefined;\n            hook.setter = undefined;\n        }\n    }\n    if (memos) {\n        for (const hook of memos.byCursor) {\n            hook.value = undefined;\n            hook.dependencies = undefined;\n        }\n    }\n    if (refs) {\n        for (const hook of refs.byCursor) {\n            hook.current = undefined;\n        }\n    }\n    componentInstance.hooks = undefined;\n    componentInstance.$element = undefined;\n    componentInstance.renderedValue = undefined;\n    componentInstance.Component = undefined;\n    componentInstance.props = undefined;\n    componentInstance.onUpdate = undefined;\n}\nfunction prepareComponentForFrame(componentInstance) {\n    if (componentInstance.mountState !== MountState.Mounted) {\n        return;\n    }\n    if (componentInstance.hooks?.state) {\n        for (const hook of componentInstance.hooks.state.byCursor) {\n            hook.value = hook.nextValue;\n        }\n    }\n}\nfunction forceUpdateComponent(componentInstance) {\n    if (componentInstance.mountState !== MountState.Mounted || !componentInstance.onUpdate) {\n        return;\n    }\n    const currentElement = componentInstance.$element;\n    renderComponent(componentInstance);\n    if (componentInstance.$element !== currentElement) {\n        componentInstance.onUpdate();\n    }\n}\nexport function useState(initial, debugKey) {\n    if (!renderingInstance.hooks) {\n        renderingInstance.hooks = {};\n    }\n    if (!renderingInstance.hooks.state) {\n        renderingInstance.hooks.state = { cursor: 0, byCursor: [] };\n    }\n    const { cursor, byCursor } = renderingInstance.hooks.state;\n    const componentInstance = renderingInstance;\n    if (byCursor[cursor] === undefined) {\n        byCursor[cursor] = {\n            value: initial,\n            nextValue: initial,\n            setter: (newValue) => {\n                if (componentInstance.mountState === MountState.Unmounted) {\n                    return;\n                }\n                if (typeof newValue === 'function') {\n                    newValue = newValue(byCursor[cursor].nextValue);\n                }\n                if (byCursor[cursor].nextValue === newValue) {\n                    return;\n                }\n                byCursor[cursor].nextValue = newValue;\n                instancesPendingUpdate.add(componentInstance);\n                runUpdatePassOnRaf();\n                if (DEBUG_MORE) {\n                    // eslint-disable-next-line no-console\n                    console.log('[Teact.useState]', DEBUG_resolveComponentName(componentInstance.Component), `State update at cursor #${cursor}${debugKey ? ` (${debugKey})` : ''}, next value: `, byCursor[cursor].nextValue);\n                }\n            },\n        };\n    }\n    renderingInstance.hooks.state.cursor++;\n    return [\n        byCursor[cursor].value,\n        byCursor[cursor].setter,\n    ];\n}\nfunction useEffectBase(isLayout, effect, dependencies, debugKey) {\n    if (!renderingInstance.hooks) {\n        renderingInstance.hooks = {};\n    }\n    if (!renderingInstance.hooks.effects) {\n        renderingInstance.hooks.effects = { cursor: 0, byCursor: [] };\n    }\n    const { cursor, byCursor } = renderingInstance.hooks.effects;\n    const componentInstance = renderingInstance;\n    const runEffectCleanup = () => safeExec(() => {\n        const { cleanup } = byCursor[cursor];\n        if (!cleanup) {\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        let DEBUG_startAt;\n        if (DEBUG) {\n            DEBUG_startAt = performance.now();\n        }\n        cleanup();\n        if (DEBUG) {\n            const duration = performance.now() - DEBUG_startAt;\n            const componentName = DEBUG_resolveComponentName(componentInstance.Component);\n            if (duration > DEBUG_EFFECT_THRESHOLD) {\n                // eslint-disable-next-line no-console\n                console.warn(`[Teact] Slow cleanup at effect cursor #${cursor}: ${componentName}, ${Math.round(duration)} ms`);\n            }\n        }\n    }, () => {\n        // eslint-disable-next-line no-console\n        console.error(`[Teact] Error in effect cleanup at cursor #${cursor} in ${componentInstance.name}`);\n    }, () => {\n        byCursor[cursor].cleanup = undefined;\n    });\n    const runEffect = () => safeExec(() => {\n        if (componentInstance.mountState === MountState.Unmounted) {\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        let DEBUG_startAt;\n        if (DEBUG) {\n            DEBUG_startAt = performance.now();\n        }\n        const result = effect();\n        if (typeof result === 'function') {\n            byCursor[cursor].cleanup = result;\n        }\n        if (DEBUG) {\n            const duration = performance.now() - DEBUG_startAt;\n            const componentName = DEBUG_resolveComponentName(componentInstance.Component);\n            if (duration > DEBUG_EFFECT_THRESHOLD) {\n                // eslint-disable-next-line no-console\n                console.warn(`[Teact] Slow effect at cursor #${cursor}: ${componentName}, ${Math.round(duration)} ms`);\n            }\n        }\n    }, () => {\n        // eslint-disable-next-line no-console\n        console.error(`[Teact] Error in effect at cursor #${cursor} in ${componentInstance.name}`);\n    });\n    function schedule() {\n        const effectId = `${componentInstance.id}_${cursor}`;\n        if (isLayout) {\n            pendingLayoutCleanups.set(effectId, runEffectCleanup);\n            pendingLayoutEffects.set(effectId, runEffect);\n        }\n        else {\n            pendingCleanups.set(effectId, runEffectCleanup);\n            pendingEffects.set(effectId, runEffect);\n        }\n        runUpdatePassOnRaf();\n    }\n    if (dependencies && byCursor[cursor]?.dependencies) {\n        if (dependencies.some((dependency, i) => dependency !== byCursor[cursor].dependencies[i])) {\n            if (DEBUG && debugKey) {\n                const causedBy = dependencies.reduce((res, newValue, i) => {\n                    const prevValue = byCursor[cursor].dependencies[i];\n                    if (newValue !== prevValue) {\n                        res.push(`${i}: ${prevValue} => ${newValue}`);\n                    }\n                    return res;\n                }, []);\n                // eslint-disable-next-line no-console\n                console.log(`[Teact] Effect \"${debugKey}\" caused by dependencies.`, causedBy.join(', '));\n            }\n            schedule();\n        }\n    }\n    else {\n        if (debugKey) {\n            // eslint-disable-next-line no-console\n            console.log(`[Teact] Effect \"${debugKey}\" caused by missing dependencies.`);\n        }\n        schedule();\n    }\n    const isFirstRun = !byCursor[cursor];\n    byCursor[cursor] = {\n        ...byCursor[cursor],\n        dependencies,\n        schedule,\n    };\n    function setupSignals() {\n        const cleanups = dependencies?.filter(isSignal).map((signal, i) => signal.subscribe(() => {\n            if (debugKey) {\n                // eslint-disable-next-line no-console\n                console.log(`[Teact] Effect \"${debugKey}\" caused by signal #${i} new value:`, signal());\n            }\n            byCursor[cursor].schedule();\n        }));\n        if (!cleanups?.length) {\n            return undefined;\n        }\n        return () => {\n            for (const cleanup of cleanups) {\n                cleanup();\n            }\n        };\n    }\n    if (isFirstRun) {\n        byCursor[cursor].releaseSignals = setupSignals();\n    }\n    renderingInstance.hooks.effects.cursor++;\n}\nexport function useEffect(effect, dependencies, debugKey) {\n    return useEffectBase(false, effect, dependencies, debugKey);\n}\nexport function useLayoutEffect(effect, dependencies, debugKey) {\n    return useEffectBase(true, effect, dependencies, debugKey);\n}\nexport function useMemo(resolver, dependencies, debugKey, debugHitRateKey) {\n    if (!renderingInstance.hooks) {\n        renderingInstance.hooks = {};\n    }\n    if (!renderingInstance.hooks.memos) {\n        renderingInstance.hooks.memos = { cursor: 0, byCursor: [] };\n    }\n    const { cursor, byCursor } = renderingInstance.hooks.memos;\n    let { value } = byCursor[cursor] || {};\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    let DEBUG_state;\n    if (DEBUG && debugHitRateKey) {\n        const instanceKey = `${debugHitRateKey}#${renderingInstance.id}`;\n        DEBUG_state = DEBUG_memos[instanceKey];\n        if (!DEBUG_state) {\n            DEBUG_state = {\n                key: instanceKey, calls: 0, misses: 0, hitRate: 0,\n            };\n            DEBUG_memos[instanceKey] = DEBUG_state;\n        }\n        DEBUG_state.calls++;\n        DEBUG_state.hitRate = (DEBUG_state.calls - DEBUG_state.misses) / DEBUG_state.calls;\n    }\n    if (byCursor[cursor] === undefined\n        || dependencies.length !== byCursor[cursor].dependencies.length\n        || dependencies.some((dependency, i) => dependency !== byCursor[cursor].dependencies[i])) {\n        if (DEBUG) {\n            if (debugKey) {\n                const msg = `[Teact.useMemo] ${renderingInstance.name} (${debugKey}): Update is caused by:`;\n                if (!byCursor[cursor]) {\n                    // eslint-disable-next-line no-console\n                    console.log(`${msg} [first render]`);\n                }\n                else {\n                    logUnequalProps(byCursor[cursor].dependencies, dependencies, msg, debugKey);\n                }\n            }\n            if (DEBUG_state) {\n                DEBUG_state.misses++;\n                DEBUG_state.hitRate = (DEBUG_state.calls - DEBUG_state.misses) / DEBUG_state.calls;\n                if (DEBUG_state.calls % 10 === 0\n                    && DEBUG_state.calls >= DEBUG_MEMOS_CALLS_THRESHOLD\n                    && DEBUG_state.hitRate < 0.25) {\n                    // eslint-disable-next-line no-console\n                    console.warn(\n                    // eslint-disable-next-line max-len\n                    `[Teact] ${DEBUG_state.key}: Hit rate is ${DEBUG_state.hitRate.toFixed(2)} for ${DEBUG_state.calls} calls`);\n                }\n            }\n        }\n        value = resolver();\n    }\n    byCursor[cursor] = {\n        value,\n        dependencies,\n    };\n    renderingInstance.hooks.memos.cursor++;\n    return value;\n}\nexport function useCallback(newCallback, dependencies, debugKey) {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    return useMemo(() => newCallback, dependencies, debugKey);\n}\n// eslint-disable-next-line no-null/no-null\nexport function useRef(initial) {\n    if (!renderingInstance.hooks) {\n        renderingInstance.hooks = {};\n    }\n    if (!renderingInstance.hooks.refs) {\n        renderingInstance.hooks.refs = { cursor: 0, byCursor: [] };\n    }\n    const { cursor, byCursor } = renderingInstance.hooks.refs;\n    if (!byCursor[cursor]) {\n        byCursor[cursor] = {\n            current: initial,\n        };\n    }\n    renderingInstance.hooks.refs.cursor++;\n    return byCursor[cursor];\n}\nexport function createContext(defaultValue) {\n    const contextId = String(contextCounter++);\n    function TeactContextProvider(props) {\n        const [getValue, setValue] = useSignal(props.value ?? defaultValue);\n        // Create a new object to avoid mutations in the parent context\n        renderingInstance.context = { ...renderingInstance.context };\n        renderingInstance.context[contextId] = getValue;\n        setValue(props.value);\n        return props.children;\n    }\n    TeactContextProvider.DEBUG_contentComponentName = contextId;\n    const context = {\n        defaultValue,\n        contextId,\n        Provider: TeactContextProvider,\n    };\n    return context;\n}\nexport function useContextSignal(context) {\n    const [getDefaultValue] = useSignal(context.defaultValue);\n    return renderingInstance.context?.[context.contextId] || getDefaultValue;\n}\nexport function useSignal(initial) {\n    const signalRef = useRef();\n    signalRef.current ??= createSignal(initial);\n    return signalRef.current;\n}\nexport function memo(Component, debugKey) {\n    function TeactMemoWrapper(props) {\n        return useMemo(() => createElement(Component, props), \n        // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n        Object.values(props), debugKey, DEBUG_MORE ? DEBUG_resolveComponentName(renderingInstance.Component) : undefined);\n    }\n    TeactMemoWrapper.DEBUG_contentComponentName = DEBUG_resolveComponentName(Component);\n    return TeactMemoWrapper;\n}\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function DEBUG_resolveComponentName(Component) {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const { name, DEBUG_contentComponentName } = Component;\n    if (name === 'TeactNContainer') {\n        return `container>${DEBUG_contentComponentName}`;\n    }\n    if (name === 'TeactMemoWrapper') {\n        return `memo>${DEBUG_contentComponentName}`;\n    }\n    if (name === 'TeactContextProvider') {\n        return `context>id${DEBUG_contentComponentName}`;\n    }\n    return name + (DEBUG_contentComponentName ? `>${DEBUG_contentComponentName}` : '');\n}\nexport default {\n    createElement,\n    Fragment,\n};\n","export default function arePropsShallowEqual(currentProps, newProps) {\n    if (currentProps === newProps) {\n        return true;\n    }\n    const currentKeys = Object.keys(currentProps);\n    const currentKeysLength = currentKeys.length;\n    const newKeysLength = Object.keys(newProps).length;\n    if (currentKeysLength !== newKeysLength) {\n        return false;\n    }\n    if (currentKeysLength === 0) {\n        return true;\n    }\n    for (let i = 0; i < currentKeysLength; i++) {\n        const prop = currentKeys[i];\n        if (currentProps[prop] !== newProps[prop]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function logUnequalProps(currentProps, newProps, msg, debugKey = '') {\n    const currentKeys = Object.keys(currentProps);\n    const currentKeysLength = currentKeys.length;\n    const newKeysLength = Object.keys(newProps).length;\n    if (currentKeysLength !== newKeysLength) {\n        // eslint-disable-next-line no-console\n        console.log(`${msg} LENGTH`);\n        return;\n    }\n    // eslint-disable-next-line no-console\n    console.log(msg);\n    currentKeys.forEach((res, prop) => {\n        if (currentProps[prop] !== newProps[prop]) {\n            // eslint-disable-next-line no-console\n            console.log(debugKey, prop, ':', currentProps[prop], '=>', newProps[prop]);\n        }\n    });\n}\n","import { DEBUG } from '../config';\nconst NON_BUBBLEABLE_EVENTS = new Set(['scroll', 'mouseenter', 'mouseleave', 'load']);\nconst documentEventCounters = {};\nconst delegationRegistryByEventType = {};\nconst delegatedEventTypesByElement = new Map();\nexport function addEventListener(element, propName, handler, asCapture = false) {\n    const eventType = resolveEventType(propName, element);\n    if (canUseEventDelegation(eventType, element, asCapture)) {\n        addDelegatedListener(eventType, element, handler);\n    }\n    else {\n        element.addEventListener(eventType, handler, asCapture);\n    }\n}\nexport function removeEventListener(element, propName, handler, asCapture = false) {\n    const eventType = resolveEventType(propName, element);\n    if (canUseEventDelegation(eventType, element, asCapture)) {\n        removeDelegatedListener(eventType, element);\n    }\n    else {\n        element.removeEventListener(eventType, handler, asCapture);\n    }\n}\nfunction resolveEventType(propName, element) {\n    const eventType = propName\n        .replace(/^on/, '')\n        .replace(/Capture$/, '').toLowerCase();\n    if (eventType === 'change' && element.tagName !== 'SELECT') {\n        // React behavior repeated here.\n        // https://stackoverflow.com/questions/38256332/in-react-whats-the-difference-between-onchange-and-oninput\n        return 'input';\n    }\n    if (eventType === 'doubleclick') {\n        return 'dblclick';\n    }\n    // Replace focus/blur by their \"bubbleable\" versions\n    if (eventType === 'focus') {\n        return 'focusin';\n    }\n    if (eventType === 'blur') {\n        return 'focusout';\n    }\n    return eventType;\n}\nfunction canUseEventDelegation(realEventType, element, asCapture) {\n    return (!asCapture\n        && !NON_BUBBLEABLE_EVENTS.has(realEventType)\n        && element.tagName !== 'VIDEO'\n        && element.tagName !== 'IFRAME');\n}\nfunction addDelegatedListener(eventType, element, handler) {\n    if (!documentEventCounters[eventType]) {\n        documentEventCounters[eventType] = 0;\n        document.addEventListener(eventType, handleEvent);\n    }\n    resolveDelegationRegistry(eventType).set(element, handler);\n    resolveDelegatedEventTypes(element).add(eventType);\n    documentEventCounters[eventType]++;\n}\nfunction removeDelegatedListener(eventType, element) {\n    documentEventCounters[eventType]--;\n    if (!documentEventCounters[eventType]) {\n        // Synchronous deletion on 0 will cause perf degradation in the case of 1 element\n        // which is not a real case, so it's ok to do it this way\n        document.removeEventListener(eventType, handleEvent);\n    }\n    delegationRegistryByEventType[eventType].delete(element);\n    delegatedEventTypesByElement.get(element).delete(eventType);\n}\nexport function removeAllDelegatedListeners(element) {\n    const eventTypes = delegatedEventTypesByElement.get(element);\n    if (!eventTypes) {\n        return;\n    }\n    eventTypes.forEach((eventType) => removeDelegatedListener(eventType, element));\n    delegatedEventTypesByElement.delete(element);\n}\nfunction handleEvent(realEvent) {\n    const events = delegationRegistryByEventType[realEvent.type];\n    if (events) {\n        let furtherCallsPrevented = false;\n        let current = realEvent.target;\n        const stopPropagation = () => {\n            furtherCallsPrevented = true;\n        };\n        const preventDefault = () => {\n            realEvent.preventDefault();\n        };\n        // Proxy is a simplest way to provide an access to the event property\n        const event = new Proxy(realEvent, {\n            get(target, p) {\n                if (p === 'currentTarget') {\n                    return current;\n                }\n                if (p === 'stopPropagation' || p === 'stopImmediatePropagation') {\n                    return stopPropagation;\n                }\n                if (p === 'preventDefault') {\n                    // \"this\" is changed to proxy and one can't call methods via it\n                    return preventDefault;\n                }\n                return Reflect.get(target, p);\n            },\n        });\n        // This can also be limited by teact root\n        while (current && current !== document.body) {\n            const handler = events.get(current);\n            if (handler) {\n                handler(event);\n                if (furtherCallsPrevented) {\n                    return;\n                }\n            }\n            current = current.parentNode;\n        }\n    }\n}\nfunction resolveDelegationRegistry(eventType) {\n    if (!delegationRegistryByEventType[eventType]) {\n        delegationRegistryByEventType[eventType] = new Map();\n    }\n    return delegationRegistryByEventType[eventType];\n}\nfunction resolveDelegatedEventTypes(element) {\n    const existing = delegatedEventTypesByElement.get(element);\n    if (existing) {\n        return existing;\n    }\n    const newSet = new Set();\n    delegatedEventTypesByElement.set(element, newSet);\n    return newSet;\n}\nif (DEBUG) {\n    document.addEventListener('dblclick', () => {\n        const documentListenersCount = Object.keys(documentEventCounters).length;\n        const delegatedHandlersCount1 = Object.values(documentEventCounters)\n            .reduce((acc, counter) => acc + counter, 0);\n        const delegationRegistriesCount = Object.keys(delegationRegistryByEventType).length;\n        const delegatedHandlersCount2 = Object.values(delegationRegistryByEventType)\n            .reduce((acc, delegationRegistry) => acc + delegationRegistry.size, 0);\n        const delegationElementsCount = delegatedEventTypesByElement.size;\n        const delegatedEventTypesCount = Array.from(delegatedEventTypesByElement.values())\n            .reduce((acc, eventTypes) => acc + eventTypes.size, 0);\n        // eslint-disable-next-line no-console\n        console.warn('DELEGATED EVENTS STATS', {\n            delegatedHandlersCount1,\n            delegatedHandlersCount2,\n            delegatedEventTypesCount,\n            delegationRegistriesCount,\n            delegationElementsCount,\n            documentListenersCount,\n        });\n    });\n}\n","import { DEBUG } from '../config';\nimport { unique } from '../util/iteratees';\nimport { addEventListener, removeAllDelegatedListeners, removeEventListener } from './dom-events';\nimport { captureImmediateEffects, hasElementChanged, isParentElement, mountComponent, MountState, renderComponent, unmountComponent, VirtualType, } from './teact';\nconst FILTERED_ATTRIBUTES = new Set(['key', 'ref', 'teactFastList', 'teactOrderKey']);\nconst HTML_ATTRIBUTES = new Set(['dir', 'role', 'form']);\nconst CONTROLLABLE_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\nconst MAPPED_ATTRIBUTES = {\n    autoPlay: 'autoplay',\n    autoComplete: 'autocomplete',\n};\nconst INDEX_KEY_PREFIX = '__indexKey#';\nconst headsByElement = new WeakMap();\nconst extraClasses = new WeakMap();\nconst extraStyles = new WeakMap();\nfunction render($element, parentEl) {\n    if (!headsByElement.has(parentEl)) {\n        headsByElement.set(parentEl, { children: [] });\n    }\n    const runImmediateEffects = captureImmediateEffects();\n    const $head = headsByElement.get(parentEl);\n    const $renderedChild = renderWithVirtual(parentEl, $head.children[0], $element, $head, {}, 0);\n    runImmediateEffects?.();\n    $head.children = $renderedChild ? [$renderedChild] : [];\n    return undefined;\n}\nfunction renderWithVirtual(parentEl, $current, $new, $parent, currentContext, index, options = {}) {\n    const { skipComponentUpdate, fragment } = options;\n    let { nextSibling, isSvg } = options;\n    const isCurrentComponent = $current?.type === VirtualType.Component;\n    const isNewComponent = $new?.type === VirtualType.Component;\n    const $newAsReal = $new;\n    const isCurrentFragment = !isCurrentComponent && $current?.type === VirtualType.Fragment;\n    const isNewFragment = !isNewComponent && $new?.type === VirtualType.Fragment;\n    if (!isSvg && $new?.type === VirtualType.Tag && $new.tag === 'svg') {\n        isSvg = true;\n    }\n    if (!skipComponentUpdate\n        && isCurrentComponent && isNewComponent\n        && !hasElementChanged($current, $new)) {\n        $new = updateComponent($current, $new);\n    }\n    // Parent element may have changed, so we need to update the listener closure.\n    if (!skipComponentUpdate\n        && isNewComponent\n        && $new.componentInstance.mountState === MountState.Mounted) {\n        setupComponentUpdateListener(parentEl, $new, $parent, currentContext, index);\n    }\n    if ($current === $new) {\n        return $new;\n    }\n    if (DEBUG && $new) {\n        const newTarget = 'target' in $new && $new.target;\n        if (newTarget && (!$current || ('target' in $current && newTarget !== $current.target))) {\n            throw new Error('[Teact] Cached virtual element was moved within tree');\n        }\n    }\n    if (!$current && $new) {\n        if (isNewComponent || isNewFragment) {\n            if (isNewComponent) {\n                $new = initComponent(parentEl, $new, $parent, currentContext, index);\n                currentContext = $new.componentInstance.context ?? currentContext;\n            }\n            mountChildren(parentEl, $new, currentContext, {\n                nextSibling, fragment, isSvg,\n            });\n        }\n        else {\n            const canSetTextContent = !fragment\n                && !nextSibling\n                && $newAsReal.type === VirtualType.Text\n                && $parent.children.length === 1\n                && !parentEl.firstChild;\n            if (canSetTextContent) {\n                parentEl.textContent = $newAsReal.value;\n                $newAsReal.target = parentEl.firstChild;\n            }\n            else {\n                const node = createNode($newAsReal, currentContext, isSvg);\n                $newAsReal.target = node;\n                insertBefore(fragment || parentEl, node, nextSibling);\n                if ($newAsReal.type === VirtualType.Tag) {\n                    setElementRef($newAsReal, node);\n                }\n            }\n        }\n    }\n    else if ($current && !$new) {\n        remount(parentEl, $current, currentContext, undefined);\n    }\n    else if ($current && $new) {\n        if (hasElementChanged($current, $new)) {\n            if (!nextSibling) {\n                nextSibling = getNextSibling($current);\n            }\n            if (isNewComponent || isNewFragment) {\n                if (isNewComponent) {\n                    $new = initComponent(parentEl, $new, $parent, currentContext, index);\n                    currentContext = $new.componentInstance.context ?? currentContext;\n                }\n                remount(parentEl, $current, currentContext, undefined);\n                mountChildren(parentEl, $new, currentContext, {\n                    nextSibling, fragment, isSvg,\n                });\n            }\n            else {\n                const node = createNode($newAsReal, currentContext, isSvg);\n                $newAsReal.target = node;\n                remount(parentEl, $current, currentContext, node, nextSibling);\n                if ($newAsReal.type === VirtualType.Tag) {\n                    setElementRef($newAsReal, node);\n                }\n            }\n        }\n        else {\n            const isComponent = isCurrentComponent && isNewComponent;\n            const isFragment = isCurrentFragment && isNewFragment;\n            if (isComponent || isFragment) {\n                renderChildren($current, $new, currentContext, parentEl, nextSibling, options.forceMoveToEnd);\n            }\n            else {\n                const $currentAsReal = $current;\n                const currentTarget = $currentAsReal.target;\n                $newAsReal.target = currentTarget;\n                $currentAsReal.target = undefined; // Help GC\n                const isTag = $current.type === VirtualType.Tag;\n                if (isTag) {\n                    const $newAsTag = $new;\n                    setElementRef($current, undefined);\n                    setElementRef($newAsTag, currentTarget);\n                    if (nextSibling || options.forceMoveToEnd) {\n                        insertBefore(parentEl, currentTarget, nextSibling);\n                    }\n                    updateAttributes($current, $newAsTag, currentTarget, isSvg);\n                    renderChildren($current, $newAsTag, currentContext, currentTarget, undefined, undefined, isSvg);\n                }\n            }\n        }\n    }\n    return $new;\n}\nfunction initComponent(parentEl, $element, $parent, currentContext, index) {\n    const { componentInstance } = $element;\n    $element.componentInstance.context = currentContext;\n    if (componentInstance.mountState === MountState.New) {\n        $element = mountComponent(componentInstance);\n        setupComponentUpdateListener(parentEl, $element, $parent, currentContext, index);\n    }\n    return $element;\n}\nfunction updateComponent($current, $new) {\n    $current.componentInstance.props = $new.componentInstance.props;\n    return renderComponent($current.componentInstance);\n}\nfunction setupComponentUpdateListener(parentEl, $element, $parent, currentContext, index) {\n    const { componentInstance } = $element;\n    componentInstance.onUpdate = () => {\n        $parent.children[index] = renderWithVirtual(parentEl, $parent.children[index], componentInstance.$element, $parent, currentContext, index, { skipComponentUpdate: true });\n    };\n}\nfunction mountChildren(parentEl, $element, currentContext, options) {\n    const { children } = $element;\n    for (let i = 0, l = children.length; i < l; i++) {\n        const $child = children[i];\n        const $renderedChild = renderWithVirtual(parentEl, undefined, $child, $element, currentContext, i, options);\n        if ($renderedChild !== $child) {\n            children[i] = $renderedChild;\n        }\n    }\n}\nfunction unmountChildren(parentEl, $element, currentContext) {\n    for (const $child of $element.children) {\n        renderWithVirtual(parentEl, $child, undefined, $element, currentContext, -1);\n    }\n}\nfunction createNode($element, currentContext, isSvg) {\n    if ($element.type === VirtualType.Empty) {\n        return document.createTextNode('');\n    }\n    if ($element.type === VirtualType.Text) {\n        return document.createTextNode($element.value);\n    }\n    const { tag, props, children } = $element;\n    const element = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', tag) : document.createElement(tag);\n    processControlled(tag, props);\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in props) {\n        if (!props.hasOwnProperty(key))\n            continue;\n        if (props[key] !== undefined) {\n            setAttribute(element, key, props[key], isSvg);\n        }\n    }\n    processUncontrolledOnMount(element, props);\n    for (let i = 0, l = children.length; i < l; i++) {\n        const $child = children[i];\n        const $renderedChild = renderWithVirtual(element, undefined, $child, $element, currentContext, i, { isSvg });\n        if ($renderedChild !== $child) {\n            children[i] = $renderedChild;\n        }\n    }\n    return element;\n}\nfunction remount(parentEl, $current, currentContext, node, componentNextSibling) {\n    const isComponent = $current.type === VirtualType.Component;\n    const isFragment = !isComponent && $current.type === VirtualType.Fragment;\n    if (isComponent || isFragment) {\n        if (isComponent) {\n            unmountComponent($current.componentInstance);\n        }\n        unmountChildren(parentEl, $current, currentContext);\n        if (node) {\n            insertBefore(parentEl, node, componentNextSibling);\n        }\n    }\n    else {\n        if (node) {\n            parentEl.replaceChild(node, $current.target);\n        }\n        else {\n            parentEl.removeChild($current.target);\n        }\n        unmountRealTree($current);\n    }\n}\nfunction unmountRealTree($element) {\n    if ($element.type === VirtualType.Component) {\n        unmountComponent($element.componentInstance);\n    }\n    else if ($element.type !== VirtualType.Fragment) {\n        if ($element.type === VirtualType.Tag) {\n            extraClasses.delete($element.target);\n            setElementRef($element, undefined);\n            removeAllDelegatedListeners($element.target);\n        }\n        $element.target = undefined; // Help GC\n        if ($element.type !== VirtualType.Tag) {\n            return;\n        }\n    }\n    for (const $child of $element.children) {\n        unmountRealTree($child);\n    }\n}\nfunction insertBefore(parentEl, node, nextSibling) {\n    if (nextSibling) {\n        parentEl.insertBefore(node, nextSibling);\n    }\n    else {\n        parentEl.appendChild(node);\n    }\n}\nfunction getNextSibling($current) {\n    if ($current.type === VirtualType.Component || $current.type === VirtualType.Fragment) {\n        const lastChild = $current.children[$current.children.length - 1];\n        return getNextSibling(lastChild);\n    }\n    return $current.target.nextSibling || undefined;\n}\nfunction renderChildren($current, $new, currentContext, currentEl, nextSibling, forceMoveToEnd = false, isSvg) {\n    if (DEBUG) {\n        DEBUG_checkKeyUniqueness($new.children);\n    }\n    if (('props' in $new) && $new.props.teactFastList) {\n        renderFastListChildren($current, $new, currentContext, currentEl);\n        return;\n    }\n    const currentChildren = $current.children;\n    const newChildren = $new.children;\n    const currentChildrenLength = currentChildren.length;\n    const newChildrenLength = newChildren.length;\n    const maxLength = Math.max(currentChildrenLength, newChildrenLength);\n    const fragment = newChildrenLength > currentChildrenLength ? document.createDocumentFragment() : undefined;\n    const lastCurrentChild = $current.children[currentChildrenLength - 1];\n    const fragmentNextSibling = fragment && (nextSibling || (lastCurrentChild ? getNextSibling(lastCurrentChild) : undefined));\n    for (let i = 0; i < maxLength; i++) {\n        const $renderedChild = renderWithVirtual(currentEl, currentChildren[i], newChildren[i], $new, currentContext, i, i >= currentChildrenLength ? { fragment, isSvg } : { nextSibling, forceMoveToEnd, isSvg });\n        if ($renderedChild && $renderedChild !== newChildren[i]) {\n            newChildren[i] = $renderedChild;\n        }\n    }\n    if (fragment) {\n        insertBefore(currentEl, fragment, fragmentNextSibling);\n    }\n}\n// This function allows to prepend/append a bunch of new DOM nodes to the top/bottom of preserved ones.\n// It also allows to selectively move particular preserved nodes within their DOM list.\nfunction renderFastListChildren($current, $new, currentContext, currentEl) {\n    const currentChildren = $current.children;\n    const newChildren = $new.children;\n    const newKeys = new Set();\n    for (const $newChild of newChildren) {\n        const key = 'props' in $newChild ? $newChild.props.key : undefined;\n        if (DEBUG && isParentElement($newChild)) {\n            // eslint-disable-next-line no-null/no-null\n            if (key === undefined || key === null) {\n                // eslint-disable-next-line no-console\n                console.warn('Missing `key` in `teactFastList`');\n            }\n            if ($newChild.type === VirtualType.Fragment) {\n                throw new Error('[Teact] Fragment can not be child of container with `teactFastList`');\n            }\n        }\n        newKeys.add(key);\n    }\n    // Build a collection of old children that also remain in the new list\n    let currentRemainingIndex = 0;\n    const remainingByKey = {};\n    for (let i = 0, l = currentChildren.length; i < l; i++) {\n        const $currentChild = currentChildren[i];\n        let key = 'props' in $currentChild ? $currentChild.props.key : undefined;\n        // eslint-disable-next-line no-null/no-null\n        const isKeyPresent = key !== undefined && key !== null;\n        // First we process removed children\n        if (isKeyPresent && !newKeys.has(key)) {\n            renderWithVirtual(currentEl, $currentChild, undefined, $new, currentContext, -1);\n            continue;\n        }\n        else if (!isKeyPresent) {\n            const $newChild = newChildren[i];\n            const newChildKey = ($newChild && 'props' in $newChild) ? $newChild.props.key : undefined;\n            // If a non-key element remains at the same index we preserve it with a virtual `key`\n            if ($newChild && !newChildKey) {\n                key = `${INDEX_KEY_PREFIX}${i}`;\n                // Otherwise, we just remove it\n            }\n            else {\n                renderWithVirtual(currentEl, $currentChild, undefined, $new, currentContext, -1);\n                continue;\n            }\n        }\n        // Then we build up info about remaining children\n        remainingByKey[key] = {\n            $element: $currentChild,\n            index: currentRemainingIndex++,\n            orderKey: 'props' in $currentChild ? $currentChild.props.teactOrderKey : undefined,\n        };\n    }\n    let fragmentIndex;\n    let fragmentSize;\n    let currentPreservedIndex = 0;\n    for (let i = 0, l = newChildren.length; i < l; i++) {\n        const $newChild = newChildren[i];\n        const key = 'props' in $newChild ? $newChild.props.key : `${INDEX_KEY_PREFIX}${i}`;\n        const currentChildInfo = remainingByKey[key];\n        if (!currentChildInfo) {\n            if (fragmentSize === undefined) {\n                fragmentIndex = i;\n                fragmentSize = 0;\n            }\n            fragmentSize++;\n            continue;\n        }\n        // This prepends new children to the top\n        if (fragmentSize) {\n            renderFragment(fragmentIndex, fragmentSize, currentEl, $new, currentContext);\n            fragmentSize = undefined;\n            fragmentIndex = undefined;\n        }\n        // Now we check if a preserved node was moved within preserved list\n        const newOrderKey = 'props' in $newChild ? $newChild.props.teactOrderKey : undefined;\n        // That is indicated by a changed `teactOrderKey` value\n        const shouldMoveNode = (currentChildInfo.index !== currentPreservedIndex && (!newOrderKey || currentChildInfo.orderKey !== newOrderKey));\n        const isMovingDown = shouldMoveNode && currentPreservedIndex > currentChildInfo.index;\n        if (!shouldMoveNode || isMovingDown) {\n            currentPreservedIndex++;\n        }\n        const nextSibling = currentEl.childNodes[isMovingDown ? i + 1 : i];\n        const options = shouldMoveNode ? (nextSibling ? { nextSibling } : { forceMoveToEnd: true }) : undefined;\n        const $renderedChild = renderWithVirtual(currentEl, currentChildInfo.$element, $newChild, $new, currentContext, i, options);\n        if ($renderedChild !== $newChild) {\n            newChildren[i] = $renderedChild;\n        }\n    }\n    // This appends new children to the bottom\n    if (fragmentSize) {\n        renderFragment(fragmentIndex, fragmentSize, currentEl, $new, currentContext);\n    }\n}\nfunction renderFragment(fragmentIndex, fragmentSize, parentEl, $parent, currentContext) {\n    const nextSibling = parentEl.childNodes[fragmentIndex];\n    if (fragmentSize === 1) {\n        const $child = $parent.children[fragmentIndex];\n        const $renderedChild = renderWithVirtual(parentEl, undefined, $child, $parent, currentContext, fragmentIndex, { nextSibling });\n        if ($renderedChild !== $child) {\n            $parent.children[fragmentIndex] = $renderedChild;\n        }\n        return;\n    }\n    const fragment = document.createDocumentFragment();\n    for (let i = fragmentIndex; i < fragmentIndex + fragmentSize; i++) {\n        const $child = $parent.children[i];\n        const $renderedChild = renderWithVirtual(parentEl, undefined, $child, $parent, currentContext, i, { fragment });\n        if ($renderedChild !== $child) {\n            $parent.children[i] = $renderedChild;\n        }\n    }\n    insertBefore(parentEl, fragment, nextSibling);\n}\nfunction setElementRef($element, element) {\n    const { ref } = $element.props;\n    if (typeof ref === 'object') {\n        ref.current = element;\n    }\n    else if (typeof ref === 'function') {\n        ref(element);\n    }\n}\nfunction processControlled(tag, props) {\n    const isValueControlled = props.value !== undefined;\n    const isCheckedControlled = props.checked !== undefined;\n    const isControlled = (isValueControlled || isCheckedControlled) && CONTROLLABLE_TAGS.includes(tag.toUpperCase());\n    if (!isControlled) {\n        return;\n    }\n    const { value, checked, onInput, onChange, } = props;\n    props.onChange = undefined;\n    props.onInput = (e) => {\n        onInput?.(e);\n        onChange?.(e);\n        if (value !== undefined && value !== e.currentTarget.value) {\n            const { selectionStart, selectionEnd } = e.currentTarget;\n            const isCaretAtEnd = selectionStart === selectionEnd && selectionEnd === e.currentTarget.value.length;\n            e.currentTarget.value = value;\n            if (typeof selectionStart === 'number' && typeof selectionEnd === 'number') {\n                e.currentTarget.setSelectionRange(selectionStart, selectionEnd);\n                const selectionState = { selectionStart, selectionEnd, isCaretAtEnd };\n                // eslint-disable-next-line no-underscore-dangle\n                e.currentTarget.dataset.__teactSelectionState = JSON.stringify(selectionState);\n            }\n        }\n        if (checked !== undefined) {\n            e.currentTarget.checked = checked;\n        }\n    };\n}\nfunction processUncontrolledOnMount(element, props) {\n    if (!CONTROLLABLE_TAGS.includes(element.tagName)) {\n        return;\n    }\n    if (props.defaultValue) {\n        setAttribute(element, 'value', props.defaultValue);\n    }\n    if (props.defaultChecked) {\n        setAttribute(element, 'checked', props.defaultChecked);\n    }\n}\nfunction updateAttributes($current, $new, element, isSvg) {\n    processControlled(element.tagName, $new.props);\n    const currentEntries = Object.entries($current.props);\n    const newEntries = Object.entries($new.props);\n    for (const [key, currentValue] of currentEntries) {\n        const newValue = $new.props[key];\n        if (currentValue !== undefined\n            && (newValue === undefined\n                || (currentValue !== newValue && key.startsWith('on')))) {\n            removeAttribute(element, key, currentValue);\n        }\n    }\n    for (const [key, newValue] of newEntries) {\n        const currentValue = $current.props[key];\n        if (newValue !== undefined && newValue !== currentValue) {\n            setAttribute(element, key, newValue, isSvg);\n        }\n    }\n}\nfunction setAttribute(element, key, value, isSvg) {\n    if (key === 'className') {\n        updateClassName(element, value, isSvg);\n    }\n    else if (key === 'value') {\n        const inputEl = element;\n        if (inputEl.value !== value) {\n            inputEl.value = value;\n            // eslint-disable-next-line no-underscore-dangle\n            const selectionStateJson = inputEl.dataset.__teactSelectionState;\n            if (selectionStateJson) {\n                const { selectionStart, selectionEnd, isCaretAtEnd } = JSON.parse(selectionStateJson);\n                if (isCaretAtEnd) {\n                    const length = inputEl.value.length;\n                    inputEl.setSelectionRange(length, length);\n                }\n                else if (typeof selectionStart === 'number' && typeof selectionEnd === 'number') {\n                    inputEl.setSelectionRange(selectionStart, selectionEnd);\n                }\n            }\n        }\n    }\n    else if (key === 'style') {\n        updateStyle(element, value);\n    }\n    else if (key === 'dangerouslySetInnerHTML') {\n        // eslint-disable-next-line no-underscore-dangle\n        element.innerHTML = value.__html;\n    }\n    else if (key.startsWith('on')) {\n        addEventListener(element, key, value, key.endsWith('Capture'));\n    }\n    else if (isSvg || key.startsWith('data-') || key.startsWith('aria-') || HTML_ATTRIBUTES.has(key)) {\n        element.setAttribute(key, value);\n    }\n    else if (!FILTERED_ATTRIBUTES.has(key)) {\n        element[MAPPED_ATTRIBUTES[key] || key] = value;\n    }\n}\nfunction removeAttribute(element, key, value) {\n    if (key === 'className') {\n        updateClassName(element, '');\n    }\n    else if (key === 'value') {\n        element.value = '';\n    }\n    else if (key === 'style') {\n        updateStyle(element, '');\n    }\n    else if (key === 'dangerouslySetInnerHTML') {\n        element.innerHTML = '';\n    }\n    else if (key.startsWith('on')) {\n        removeEventListener(element, key, value, key.endsWith('Capture'));\n    }\n    else if (!FILTERED_ATTRIBUTES.has(key)) {\n        element.removeAttribute(key);\n    }\n}\nfunction updateClassName(element, value, isSvg) {\n    if (isSvg) {\n        element.setAttribute('class', value);\n        return;\n    }\n    const htmlElement = element;\n    const extra = extraClasses.get(element);\n    if (!extra) {\n        htmlElement.className = value;\n        return;\n    }\n    const extraArray = Array.from(extra);\n    if (value) {\n        extraArray.push(value);\n    }\n    htmlElement.className = extraArray.join(' ');\n}\nfunction updateStyle(element, value) {\n    element.style.cssText = value;\n    const extraObject = extraStyles.get(element);\n    if (extraObject) {\n        applyExtraStyles(element);\n    }\n}\nexport function addExtraClass(element, className, forceSingle = false) {\n    if (!forceSingle) {\n        const classNames = className.split(' ');\n        if (classNames.length > 1) {\n            for (const cn of classNames) {\n                addExtraClass(element, cn, true);\n            }\n            return;\n        }\n    }\n    element.classList.add(className);\n    const classList = extraClasses.get(element);\n    if (classList) {\n        classList.add(className);\n    }\n    else {\n        extraClasses.set(element, new Set([className]));\n    }\n}\nexport function removeExtraClass(element, className, forceSingle = false) {\n    if (!forceSingle) {\n        const classNames = className.split(' ');\n        if (classNames.length > 1) {\n            for (const cn of classNames) {\n                removeExtraClass(element, cn, true);\n            }\n            return;\n        }\n    }\n    element.classList.remove(className);\n    const classList = extraClasses.get(element);\n    if (classList) {\n        classList.delete(className);\n        if (!classList.size) {\n            extraClasses.delete(element);\n        }\n    }\n}\nexport function toggleExtraClass(element, className, force, forceSingle = false) {\n    if (!forceSingle) {\n        const classNames = className.split(' ');\n        if (classNames.length > 1) {\n            for (const cn of classNames) {\n                toggleExtraClass(element, cn, force, true);\n            }\n            return;\n        }\n    }\n    element.classList.toggle(className, force);\n    if (element.classList.contains(className)) {\n        addExtraClass(element, className);\n    }\n    else {\n        removeExtraClass(element, className);\n    }\n}\nexport function setExtraStyles(element, styles) {\n    extraStyles.set(element, styles);\n    applyExtraStyles(element);\n}\nfunction applyExtraStyles(element) {\n    const standardStyles = Object.entries(extraStyles.get(element)).reduce((acc, [prop, value]) => {\n        if (prop.startsWith('--')) {\n            element.style.setProperty(prop, value);\n        }\n        else {\n            acc[prop] = value;\n        }\n        return acc;\n    }, {});\n    Object.assign(element.style, standardStyles);\n}\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction DEBUG_checkKeyUniqueness(children) {\n    const firstChild = children[0];\n    if (firstChild && 'props' in firstChild && firstChild.props.key !== undefined) {\n        const keys = children.reduce((acc, child) => {\n            if ('props' in child && child.props.key) {\n                acc.push(child.props.key);\n            }\n            return acc;\n        }, []);\n        if (keys.length !== unique(keys).length) {\n            // eslint-disable-next-line no-console\n            console.warn('[Teact] Duplicated keys:', keys.filter((e, i, a) => a.indexOf(e) !== i), children);\n            throw new Error('[Teact] Children keys are not unique');\n        }\n    }\n}\nconst TeactDOM = { render };\nexport default TeactDOM;\n","import * as teact from './teact';\nimport * as teactDom from './teact-dom';\nconst { default: teactDefault, ...Teact } = teact;\nObject.assign(Teact, teactDefault);\nconst { default: teactDomDefault, ...TeactDOM } = teactDom;\nObject.assign(TeactDOM, teactDomDefault);\nexport { Teact, TeactDOM };\n"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","DEBUG","DEBUG_MORE","throttleWith","schedulerFn","fn","args","waiting","_args","fastRafCallbacks","fastRafFallbackCallbacks","fastRafFallbackTimeout","KEYS_TO_IGNORE","Set","counters","renderCountersThrottled","ms","shouldRunFirst","interval","isPending","self","setInterval","clearInterval","undefined","throttle","loggerEl","document","createElement","style","cssText","body","appendChild","clearEl","innerText","addEventListener","setupOverlay","halfSecondAgo","Date","now","maxRenders","maxDuration","entries","reduce","acc","has","includes","innerHTML","filter","sort","a","b","lastUpdateAt","map","factor","Math","round","toString","padStart","join","incrementOverlayCounter","orderBy","collection","orderRule","mode","compareValues","currentOrderRule","isAsc","aValue","bValue","Array","isArray","mode1","mode2","orderRule1","orderRule2","isAsc1","isAsc2","handleErrorEvent","e","ErrorEvent","message","preventDefault","handleError","error","reason","err","console","window","SAFE_EXEC_ENABLED","safeExec","cb","rescue","always","createCallbackManager","callbacks","removeCallback","delete","runCallbacks","forEach","callback","addCallback","add","hasCallbacks","Boolean","size","SIGNAL_MARK","isSignal","unsubscribesByEffect","Map","currentEffect","phase","setPhase","newPhase","pendingMeasureTasks","pendingMutationTasks","pendingForceReflowTasks","runUpdatePassOnRaf","throttledFn","withTimeoutFallback","requestAnimationFrame","currentCallbacks","clearTimeout","setTimeout","currentTimeoutCallbacks","fastRaf","currentMeasureTasks","task","Promise","resolve","then","currentMutationTasks","pendingForceReflowMutationTasks","mutationTask","push","VirtualType","MountState","Fragment","DEBUG_RENDER_THRESHOLD","DEBUG_EFFECT_THRESHOLD","DEBUG_SILENT_RENDERS_FOR","renderingInstance","contextCounter","lastComponentId","isParentElement","$element","type","Tag","Component","source","props","children","buildChildren","buildFragmentElement","length","componentInstance","id","name","mountState","New","buildComponentElement","createComponentInstance","tag","buildTagElement","noEmpty","cleanChildren","i","isEmptyPlaceholder","slice","dropEmptyTail","newChildren","l","child","buildChildElement","Empty","Text","String","DEBUG_components","TOTAL","renders","DEBUG_memos","DEBUG_MEMOS_CALLS_THRESHOLD","warn","values","avgRenderTime","state","Number","toFixed","calls","hitRate","instancesPendingUpdate","idsToExcludeFromUpdate","pendingEffects","pendingCleanups","pendingLayoutEffects","pendingLayoutCleanups","areImmediateEffectsCaptured","runImmediateEffects","captureImmediateEffects","instancesToUpdate","from","currentCleanups","currentEffects","prepareComponentForFrame","instance","Mounted","onUpdate","currentElement","renderComponent","forceUpdateComponent","runCapturedImmediateEffects","currentLayoutCleanups","currentLayoutEffects","newRenderedValue","DEBUG_startAt","hooks","cursor","effects","memos","refs","componentName","DEBUG_resolveComponentName","log","performance","duration","renderedValue","hasElementChanged","$old","$new","mountComponent","unmountComponent","effect","byCursor","cleanup","releaseSignals","Unmounted","hook","schedule","dependencies","nextValue","setter","current","helpGc","useState","initial","debugKey","newValue","useEffectBase","isLayout","runEffectCleanup","runEffect","result","effectId","set","some","dependency","causedBy","res","prevValue","isFirstRun","cleanups","signal","subscribe","setupSignals","useEffect","useLayoutEffect","useMemo","resolver","debugHitRateKey","DEBUG_state","instanceKey","misses","msg","currentProps","newProps","currentKeys","keys","logUnequalProps","useCallback","newCallback","useRef","createContext","defaultValue","contextId","TeactContextProvider","getValue","setValue","useSignal","context","DEBUG_contentComponentName","Provider","useContextSignal","getDefaultValue","signalRef","unsubscribe","unsubscribes","assign","createSignal","memo","TeactMemoWrapper","NON_BUBBLEABLE_EVENTS","documentEventCounters","delegationRegistryByEventType","delegatedEventTypesByElement","resolveEventType","propName","element","eventType","replace","toLowerCase","tagName","canUseEventDelegation","realEventType","asCapture","removeDelegatedListener","removeEventListener","handleEvent","realEvent","events","furtherCallsPrevented","target","stopPropagation","event","Proxy","p","Reflect","handler","parentNode","documentListenersCount","delegatedHandlersCount1","counter","delegationRegistriesCount","delegatedHandlersCount2","delegationRegistry","delegationElementsCount","delegatedEventTypesCount","eventTypes","FILTERED_ATTRIBUTES","HTML_ATTRIBUTES","CONTROLLABLE_TAGS","MAPPED_ATTRIBUTES","autoPlay","autoComplete","INDEX_KEY_PREFIX","headsByElement","WeakMap","extraClasses","extraStyles","renderWithVirtual","parentEl","$current","$parent","currentContext","index","options","skipComponentUpdate","fragment","nextSibling","isSvg","isCurrentComponent","isNewComponent","$newAsReal","isCurrentFragment","isNewFragment","updateComponent","setupComponentUpdateListener","newTarget","Error","initComponent","mountChildren","firstChild","node","createNode","insertBefore","setElementRef","textContent","remount","getNextSibling","renderChildren","forceMoveToEnd","$currentAsReal","currentTarget","$newAsTag","processControlled","currentEntries","newEntries","currentValue","startsWith","removeAttribute","setAttribute","updateAttributes","$child","$renderedChild","createTextNode","createElementNS","defaultChecked","processUncontrolledOnMount","componentNextSibling","isComponent","isFragment","unmountChildren","replaceChild","removeChild","unmountRealTree","removeAllDelegatedListeners","currentEl","array","indexOf","DEBUG_checkKeyUniqueness","teactFastList","currentChildren","newKeys","$newChild","currentRemainingIndex","remainingByKey","$currentChild","isKeyPresent","newChildKey","orderKey","teactOrderKey","fragmentIndex","fragmentSize","currentPreservedIndex","currentChildInfo","renderFragment","newOrderKey","shouldMoveNode","isMovingDown","childNodes","renderFastListChildren","currentChildrenLength","newChildrenLength","maxLength","max","createDocumentFragment","lastCurrentChild","fragmentNextSibling","ref","isValueControlled","isCheckedControlled","checked","toUpperCase","onInput","onChange","selectionStart","selectionEnd","isCaretAtEnd","setSelectionRange","selectionState","dataset","__teactSelectionState","JSON","stringify","updateClassName","inputEl","selectionStateJson","parse","updateStyle","__html","resolveDelegationRegistry","existing","newSet","resolveDelegatedEventTypes","addDelegatedListener","endsWith","htmlElement","extra","className","extraArray","applyExtraStyles","addExtraClass","forceSingle","classNames","split","cn","classList","removeExtraClass","remove","toggleExtraClass","force","toggle","contains","setExtraStyles","styles","standardStyles","setProperty","render","$head","default","teactDefault","Teact","teactDomDefault"],"sourceRoot":""}